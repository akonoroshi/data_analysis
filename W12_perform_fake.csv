,StartDate,EndDate,Status,IPAddress,Progress,Duration (in seconds),Finished,RecordedDate,ResponseId,RecipientLastName,RecipientFirstName,RecipientEmail,ExternalReference,LocationLatitude,LocationLongitude,DistributionChannel,UserLanguage,Q80_First Click,Q80_Last Click,Q80_Page Submit,Q80_Click Count,Q81_Browser,Q81_Version,Q81_Operating System,Q81_Resolution,Q112,Q95,Q94,Q96,Q93,Q97,Q83,Q98,Q82,Q99,Q92,Q100,Q84,Q101,Q91,Q102,expl_helpfulness,Q75,hashed_id,problem_id_x,friend,motivate,metacognitive,question,instructor,sentence,big,why,how,saw_prompts,Duration,read_prompts,filled_helpfulness,earliest,earliest_pro,last_login,username,section_id_x,is_student,is_ta,is_instructor,is_active,is_admin,is_staff,code_style,use_simpleui,user_id,id,section_id_y,timestamp,submission,score,has_best_score,problem_id_y,pyta,correct_rate,student explanation,explanation_length,has_explanation,motivate_stop,motivate_research,metacognitive_yes,friend_yes,big_yes,question_yes,instructor_yes,sentence_yes,how_yes,W10_bubble,W11_prepare,W12_prepare,W12_perform
0,2019-08-11 13:49:39,2019-08-12 09:51:55,0,,100,2099,0,2019-08-11 22:53:19,R_3PBTsrYk2vCs1GZ,,,,,,,anonymous,EN,,,,2,,,Macintosh,,,,,,,,,,,,,,,,,,4,,,68,no,no,no,yes,no,no,yes,yes,yes,1,1247,1,0,1,1,2019-08-12 21:14:14.542502,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-10 21:49:31.430813,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangle(self, Rectangle: tuple): -> None:
        """"""append the Rectangle to the List""""""
        self.rectangles.append(Rectangle)
    def get_same_area_rects(self, area: int): -> list:
        """""" return a list of rec that has the same area""""""
        if self.get_area() == Rectangle.get_area():
            return rectangles
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,1,1,0,1,0,0,0,0,1,0,0,0,1
2,2019-08-11 21:06:23,2019-08-11 18:13:11,0,,11,1,0,2019-08-11 22:10:36,R_27QftpQVngAI2lu,,,,,,,anonymous,EN,,,,,Chrome,,,,,,,,,,,,,,,,,,,,1,,,68,no,no,no,no,no,no,no,no,no,1,1,1,0,1,1,2019-08-12 03:53:22.319923,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 04:29:17.505390,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0201 (attribute-defined-outside-init)  Number of occurrences: 2.<br />  &emsp;[Line 45] Attribute 'same_are' defined outside __init__<br />&emsp;[Line 46] Attribute 'num' defined outside __init__<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.25,,0,0,1,0,0,1,0,1,0,0,1,0,0,0,1
3,2019-08-12 09:40:42,2019-08-12 07:38:51,0,,11,0,0,2019-08-11 17:00:42,R_z0E5EWMCqZPNPW1,,,,,,,anonymous,ZH-S,,,,,,75.0.3770.142,,,,,,,,,,,,,,,,,,,1,,,68,no,stop,no,yes,no,yes,no,yes,no,1,145,1,0,1,1,2019-08-13 00:25:31.265749,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:36:39.492003,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangle(self, rectangle):
        """"""appends rectangles into the rectangles list
        
        """"""
        self.rectangles.append(rectangle)
    def get_same_area_rectangles(self, numb):
        """"""return a list of rectangles with the same area
        
        """"""
        same_area = []
        for rectangle in self.rectangles:
            if rectangle == numb:
                same_area.append(rectangle)
        return same_area
        


4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0326 (bad-whitespace)  Number of occurrences: 5.<br />  &emsp;[Line 38] Exactly one space required around assignment<br />&emsp;[Line 39] Exactly one space required after comma<br />&emsp;[Line 41] Exactly one space required after comma<br />&emsp;[Line 42] Exactly one space required around assignment<br />&emsp;[Line 44] Exactly one space required around comparison<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,"i know that i missing something , not sure of self.SpecialList",0,0,0,0,0,1,1,0,0,0,1,0,0,0,1
5,2019-08-10 15:42:35,2019-08-12 08:08:38,0,,11,29,0,2019-08-12 07:53:20,R_115U8FBXVawfhgE,,,,,,,anonymous,EN,,,,,,,Macintosh,,,,,,,,,,,,,,,,follow the lecture  ,,5,,,68,no,research,yes,yes,no,no,no,yes,yes,1,1735,1,0,1,1,2019-08-13 21:20:24.657348,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 01:28:24.044259,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",,False,67.0,,1.0,,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1
6,2019-08-10 14:31:09,2019-08-12 08:27:59,0,,11,69,0,2019-08-12 01:53:17,R_1CmA6gy72kEHFjz,,,,,,,anonymous,EN,97.246,,,7,,,Macintosh,,,,,,,,,,,,,,,,,,1,,,68,no,stop,yes,yes,no,no,no,yes,no,1,474,1,1,1,1,2019-08-11 19:34:42.666531,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, rectangle: ""Rectangle"") -> object:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.add_ractangles()
        [200]
        """"""
        return self.rectangles.append(rectangle)

    def get_same_area_rects(self, number: int) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.get_same_area_rects(200)
        [200]
        >>> rc = RectangleCollection()
        >>> rc.get_same_area_rects(10)
        []
        """"""
        
        for i in self.rectangles:
            if i != number:
            self.rectangles.remove(i)
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.375,,0,0,1,0,0,1,0,1,0,1,0,0,0,0,1
7,2019-08-11 09:21:02,2019-08-09 11:48:13,0,,11,6988,0,2019-08-10 19:49:51,R_2dzn6npfZmpukKL,,,,,,,anonymous,EN,6.333,,39.829,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,no,no,no,yes,yes,yes,1,282,1,0,1,1,2019-08-12 00:48:43.698840,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 01:44:31.354191,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""
        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""
        area =w *h
        return (area)

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,True,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,1.0,,0,0,0,0,1,0,1,1,0,1,1,0,0,0,1
8,2019-08-11 19:18:17,2019-08-12 06:48:58,0,,100,2346,1,2019-08-12 01:22:54,R_2dgzeu8vLSRYVQx,,,,,,,anonymous,EN,,,,,,18.17763,,,,,,,,,,,,,,,,,,,1,,,68,no,research,no,yes,no,yes,no,yes,no,1,51,1,1,1,1,2019-08-15 00:33:20.214331,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:35:16.741250,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self, rectangles: list) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        rectangles = []
        self.rectangles = rectangles
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,True,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E1101 (no-member)  Number of occurrences: 1.<br />  &emsp;[Line 47] Instance of 'list' has no 'apppend' member; maybe 'append'?<br /><br />E1133 (not-an-iterable)  Number of occurrences: 1.<br />  &emsp;[Line 58] Non-iterable value self is used in an iterating context<br /><br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 59] Undefined variable 'get_area'<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0621 (redefined-outer-name)  Number of occurrences: 1.<br />  &emsp;[Line 40] Redefining name 'Rectangle' from outer scope (line 3)<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1
11,2019-08-11 20:14:34,2019-08-11 20:24:09,0,,11,8052,0,2019-08-11 20:07:44,R_3G8GGq3atInmbYf,,,,,,,anonymous,ZH-S,,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,no,stop,yes,no,no,yes,no,no,no,1,422,1,0,1,1,2019-08-10 22:29:39.038300,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 13:00:43.711360,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectamgle(self, R: Rectangle) -> None:
        self.rectangles.append(self.R+)
    def get_same_area_rects()
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",2.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 38] expected an indented block (<string>, line 38)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1
12,2019-08-10 12:35:53,2019-08-09 16:42:32,0,,11,0,0,2019-08-09 19:21:29,R_1otXd1Q4O3lYaWc,,,,,,,anonymous,EN,3.618,,,,,76.0.3809.100,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,yes,no,no,no,yes,yes,yes,1,2125,1,0,1,1,2019-08-12 05:22:58.838427,,Lecture,1,False,False,True,False,False,monokai,False,,,Lecture,,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        self.rectangles=[]
    def add_rectangle(self,rect):
        self.rectangles.append(rect)
    def get_same_area_rects(self,area):
        rects=[]
        for rect in self.rectangles:
            if area==rect.get_area():
                rects.append(rect)
        return rects
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.375,,28,0,0,1,0,1,1,1,0,1,1,0,0,0,1
13,2019-08-11 22:34:39,2019-08-12 09:53:04,0,,11,28,0,2019-08-12 04:10:36,R_2CWxLCi77k8moBj,,,,,,,anonymous,EN,,24.917,,,,,,,,,,,,,,,,,,,,,,,1,,,68,no,no,no,yes,no,yes,no,yes,yes,1,4936,0,0,1,1,2019-08-11 21:51:40.525476,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-10 01:08:42.050066,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []

    def get_same_area_rects(self, number):

    """"""
    >>>rc = RectangleCollection()
    >>>r1 = Rectangle(10, 20)
    >>>r2 = Rectangle(15, 20)
    >>> r3 = Rectangle(20, 10)
    >>>rc.rectangles.extend([r1, r2, r3])
    >>>res = rc.get_same_area_rects(200)
    >>>res == [r1, r3]
    True

    """"""
    self.number = number

    a = self.rectangles.expend(self.area())
    if number == self.rectangles.area():
        return True

    return False
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",2.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E1101 (no-member)  Number of occurrences: 1.<br />  &emsp;[Line 42] Instance of 'RectangleCollection' has no 'append' member<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,applying my knowledge of lists,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1
19,2019-08-12 09:48:24,2019-08-11 21:49:48,0,,11,361,0,2019-08-12 00:03:35,R_2uCLqoxcf23HLuk,,,,,,,anonymous,ZH-S,,,,,,,,1280x720,,,,,,,,,,,,,,,,,1,,,68,no,stop,no,yes,no,yes,yes,no,no,1,1107,1,1,1,1,2019-08-14 21:30:57.782221,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:53:15.671308,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangla = []
    def add_rectangle(self,rect):
       self.rectangles.append(rect)
    def get_same_area_rects(self,area):
       rects = []
        for rect in self.rectangles:
            if area==rect.get_area():
                rects.append(rect)
        return rects
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,True,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E0602 (undefined-variable)  Number of occurrences: 2.<br />  &emsp;[Line 25] Undefined variable 'w'<br />&emsp;[Line 25] Undefined variable 'h'<br /><br />W0101 (unreachable)  Number of occurrences: 1.<br />  &emsp;[Line 28] Unreachable code<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0326 (bad-whitespace)  Number of occurrences: 1.<br />  &emsp;[Line 25] Exactly one space required after assignment<br /><br />C0325 (superfluous-parens)  Number of occurrences: 1.<br />  &emsp;[Line 26] Unnecessary parens after 'return' keyword<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.5,,0,0,0,0,1,1,1,0,0,0,1,0,0,0,1
21,2019-08-11 23:09:23,2019-08-12 00:10:05,0,,11,474,0,2019-08-12 02:56:14,R_3fIggLM3ynSrgUl,,,,,,,anonymous,EN,,,,1,,76.0.3809.100,,,,,,,,,,,,,,,,,,,1,,,68,no,no,no,yes,no,no,yes,no,no,1,375,0,0,0,1,2019-08-12 15:21:41.173030,,Lecture,1,False,False,True,False,False,monokai,False,,,,2019-08-11 17:04:08.410310,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""
        self.rectangles = []

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",8.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1
23,2019-08-11 19:41:18,2019-08-12 06:43:44,0,,11,1735,0,2019-08-11 20:32:57,R_2rUZTtFYtRAvFww,,,,,,,anonymous,EN,,,,,,,Windows NT 10.0,,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,yes,no,yes,no,no,no,1,1,1,0,1,1,2019-08-12 03:28:10.509588,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    
    def add_rectangle(rectangle:Rectangle):
        self.rectangles.appened(Rectangle.rectangle)
    
    def get_same_area_rects(area:int):
        same_area = []
        for rectangle in self.rectangles:
            if rectangle.get_area = area:
                same_area.append(rectangle)
        return same_area
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,True,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.375,Why am I receiving an 'undefined variable 'L' ' error?,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1
29,2019-08-12 07:16:39,2019-08-12 07:30:46,0,,11,800,0,2019-08-11 20:36:22,R_2xJFihJtFhi2kNj,,,,,,,anonymous,EN,,19.502,28.679,,,12.1.2,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,yes,no,yes,no,yes,no,1,2362,1,0,1,1,2019-08-12 04:26:48.753248,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 00:43:43.994172,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = [] 
    def add_rectangle(self, rectangle):
        self.rectangles.append(rectangle)   
    def get_same_area_rects(self, area):
        same_area_list = []
        for rectangle in self.rectangles:
            if rectangle == area:
                same_area_list.append(rectangle)
        return same_area_list
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",1.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0326 (bad-whitespace)  Number of occurrences: 5.<br />  &emsp;[Line 38] Exactly one space required around assignment<br />&emsp;[Line 39] Exactly one space required after comma<br />&emsp;[Line 41] Exactly one space required after comma<br />&emsp;[Line 42] Exactly one space required around assignment<br />&emsp;[Line 44] Exactly one space required around comparison<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,1,0,0,1,0,0,1,0,0,1,0,0,0,1
30,2019-08-12 11:53:58,2019-08-11 19:45:18,0,,11,0,0,2019-08-11 16:13:49,R_1roGbrYrOWSV0yi,,,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,no,research,yes,yes,no,yes,yes,yes,no,1,280,1,0,1,1,2019-08-14 14:32:08.253490,,Lecture,1,False,False,True,False,False,eclipse,False,,,,2019-08-11 02:56:06.356724,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, rectangle: Rectangle) -> None:
        
        self.rectangles.append(rectangle)
        
    def get_same_area_rects(self, num: int) -> list:
        self.same_are = []
        self.num = num
        for rect in self.rectangles:
            if rect.get_area == num:
                self.same_are.append(rect)
        
        return self.same_are
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E1101 (no-member)  Number of occurrences: 2.<br />  &emsp;[Line 40] Instance of 'RectangleCollection' has no 'rectangles' member<br />&emsp;[Line 44] Instance of 'RectangleCollection' has no 'rectangles' member<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.75,,0,0,1,0,1,1,1,1,0,0,0,0,0,0,1
32,2019-08-11 20:39:07,2019-08-17 14:20:51,0,,11,78,1,2019-08-12 12:25:33,R_3QPiyOFddmHGiXn,,,,,,,anonymous,ZH-S,,,,5,Safari,,,,,,,,,,,,,,,,,,,Looked at the docstrings and constructed my functions,1,,,68,yes,research,yes,no,no,no,no,no,yes,1,1,1,0,1,1,2019-08-08 17:09:23.585831,,Lecture,1,False,False,False,False,False,monokai,False,,,Lecture,2019-08-12 11:11:03.673733,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1
33,2019-08-12 09:05:51,2019-08-10 12:07:19,0,,11,91,0,2019-08-12 13:42:27,R_1dgojjw7em50KRJ,,,,,,,anonymous,ZH-S,,,,,Chrome,,,,,,,,,,,,,,,,,,,,1,,,68,no,no,yes,no,no,no,no,yes,no,1,4394,1,0,1,1,2019-08-12 13:09:26.197165,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-09 16:51:08.255447,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",6.0,True,67.0,,0.5,,54,0,0,0,1,0,0,1,0,0,0,0,0,0,1
34,2019-08-09 13:10:59,2019-08-11 23:29:42,0,,100,536,1,2019-08-12 07:44:33,R_3EA92Vied53vjjy,,,,,,,anonymous,EN,,,,3,,,,1536x864,,,,,,,,,,,,,,,,,1,,,68,no,stop,yes,yes,no,yes,yes,yes,yes,1,240,0,0,1,1,2019-08-12 02:03:04.774985,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-08 21:00:17.022774,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        for rect in self.rectangles:
            if area==rect.get_area():
                rects.append(rect)
        return rects 
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",,,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1
35,2019-08-12 09:08:35,2019-08-09 10:43:16,0,,11,352,0,2019-08-12 05:06:03,R_2w0Sb1cNsBEA6l7,,,,,,,anonymous,EN,,,,1,,,,,,,,applying my knowledge of lists,,,,,,,,,,,,,1,,,68,no,no,no,no,no,no,yes,no,yes,1,11,1,0,1,1,2019-08-13 02:37:09.713337,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 01:00:27.575739,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0301 (line-too-long)  Number of occurrences: 1.<br />  &emsp;[Line 40] Line too long (84/80)<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,1,0,1,1,1,0,0,1,1,0,0,0,1
36,2019-08-12 09:39:16,2019-08-12 08:45:56,0,,11,0,0,2019-08-11 19:18:35,R_bDCYFvqbgWhnP8d,,,,,,,anonymous,EN,,,,,,12.1.1,,1280x720,,,,,,,,,,,,,,,,,1,,,68,yes,stop,yes,no,no,no,no,no,yes,1,800,1,0,1,1,2019-08-12 06:29:45.031165,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,,,8.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E0102 (function-redefined)  Number of occurrences: 1.<br />  &emsp;[Line 38] method already defined line 32<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0326 (bad-whitespace)  Number of occurrences: 5.<br />  &emsp;[Line 39] Exactly one space required around assignment<br />&emsp;[Line 40] Exactly one space required after comma<br />&emsp;[Line 42] Exactly one space required after comma<br />&emsp;[Line 43] Exactly one space required around assignment<br />&emsp;[Line 45] Exactly one space required around comparison<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,1,0,0,1,0,1,1,0,1,1,0,0,0,1
39,2019-08-11 20:11:37,2019-08-11 21:56:39,0,,11,25,0,2019-08-12 00:35:07,R_2ymvwp2dW2CMJfZ,,,,,,,anonymous,EN,,153.348,9.732,,Chrome,,,,,,,,,,,,,,,,,,,,1,,,68,no,no,yes,no,no,yes,no,yes,no,1,8796,1,0,1,1,2019-08-12 03:13:39.474139,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 02:04:20.979472,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,,67.0,,1.0,,0,0,0,0,0,1,1,1,0,1,0,0,0,0,1
40,2019-08-11 22:31:59,2019-08-11 10:43:23,0,,11,3987,1,2019-08-12 11:58:07,R_3R2tO4hDBnUXZLz,,,,,,,anonymous,EN,,,24.03,,,,Windows NT 10.0,,,,,"I logically thought it through, using materials learnt in lectures",,,,,,,,,,,,,6,,,68,no,no,no,yes,no,no,no,yes,no,1,1,1,0,1,1,2019-08-14 20:16:03.873087,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:33:42.488507,,6.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1
41,2019-08-11 18:51:21,2019-08-11 21:14:02,0,,11,70,0,2019-08-12 13:41:49,R_2Rb1ByJDO7FXf5i,,,,,,,anonymous,ZH-S,,,,,,,,1440x900,,,,,,,,,,,,,,,,,1,,,68,yes,research,yes,yes,no,no,no,yes,no,1,1980,1,0,1,1,2019-08-11 16:34:46.962101,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:10:47.989939,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, rec = ""Rectangle"") ->None:
        self.rectangles.append(rec)
        
    def get_same_area_rects(self, area: int) -> List:
        area_rec = []
        for rec in self.rectangles:
            if get_area(rec) = area
        return area_rec
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",8.0,True,,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 43] expected an indented block (<string>, line 43)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,,0,0,0,0,1,1,0,1,0,0,0,0,0,0,1
42,2019-08-09 15:58:28,2019-08-09 01:16:22,0,,11,4137,0,2019-08-10 12:11:13,R_DB1mIcY8stkYAkV,,,,,,,anonymous,EN,1.708,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,no,no,no,no,no,no,no,yes,no,1,2099,1,0,1,1,2019-08-14 02:07:01.512385,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-08 18:17:49.079732,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []        
        
    def add_rectangle(self, r: Rectangle) -> None:
        self.rectangles.append(r)
        
    def get_same_area_rects(self, r: rectangles, i: int) -> List:
        new_list = []
        for rec in r:
            if rec.get_area() == i:
                new_list.append(rec)
        return new_list
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",3.0,,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 41] expected an indented block (<string>, line 41)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,because the maximum number is given by 'self.size'.,0,0,1,0,1,0,0,0,0,0,1,0,0,0,1
44,2019-08-11 16:31:07,2019-08-11 23:37:43,0,,11,11,0,2019-08-11 15:27:29,R_3NLx8AYmgsW4ocp,,,,,,,anonymous,EN,,,,3,,,,1235x823,,,,,,,,,,,,,,,,,5,,,68,no,no,no,yes,no,no,yes,no,no,1,4472,0,0,1,1,2019-08-12 13:20:36.321668,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 00:09:16.217891,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        return rc.append[]
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />W0104 (pointless-statement)  Number of occurrences: 1.<br />  &emsp;[Line 38] Statement seems to have no effect<br /><br />E1101 (no-member)  Number of occurrences: 1.<br />  &emsp;[Line 38] Instance of 'RectangleCollection' has no 'rectangels' member<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1
46,2019-08-10 18:44:37,2019-08-10 16:42:40,0,,100,1050,0,2019-08-12 01:53:13,R_2CNTvtcMSQDgd92,,,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,,,4,,,68,yes,no,no,no,no,yes,yes,yes,no,1,8052,1,0,1,1,2019-08-14 18:30:12.393869,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 00:52:24.090113,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
        self.rectangles = []
        
    def add_rectangle(self, rectangle: Rectangle) -> None:
        
        self.rectangles.append(rectangle)
        
    def get_same_area_rects(self, num: int) -> List:
        
        area_rects = []
        
        for rectangle in self.rectangles:
            if rectange.get_area() == num:
                area_rects.append(rectangle)
                
        return area_rects
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E1101 (no-member)  Number of occurrences: 1.<br />  &emsp;[Line 39] Instance of 'RectangleCollection' has no 'rectangles' member<br /><br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 40] Undefined variable 'numb'<br /><br />=== Style/convention errors (fix: before submission) ===<br />E0101 (return-in-init)  Number of occurrences: 1.<br />  &emsp;[Line 32] Explicit return in __init__<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,1,0,1,1,0,1,0,1,1,0,0,0,1
47,2019-08-11 15:58:01,2019-08-11 13:34:19,0,,11,575,0,2019-08-12 00:37:45,R_2DOlpfgWEdzNAGJ,,,,,,,anonymous,EN,,24.28,,,,,,,,,,,,,,,,,,,,,,,1,,,68,no,stop,yes,no,no,no,yes,yes,yes,1,69,1,1,1,1,2019-08-09 22:45:22.132207,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 14:14:38.458220,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1
48,2019-08-11 07:50:48,2019-08-10 13:25:25,0,,100,695,0,2019-08-12 08:40:11,R_1ml63hgZ2yAEhal,,,,,,,anonymous,ZH-S,19.114,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,yes,no,yes,yes,no,no,1,5424,1,0,1,1,2019-08-10 18:13:56.157957,,Lecture,1,False,False,True,False,False,monokai,False,,,Lecture,2019-08-08 18:49:38.327116,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""
        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""
        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self) -> None:
        self.rectangles.append(new_value)
        
        
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 38] Undefined variable 'rc'<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1
50,2019-08-12 07:31:29,2019-08-12 08:40:11,0,,11,1509,0,2019-08-11 13:58:47,R_cusFln5zmgL2kG5,,,,,,,anonymous,EN,,,23.627,,Chrome,,,,,,,,,,,,,,,,,,,,1,,,68,no,research,no,yes,no,yes,no,yes,no,1,1063,1,0,1,1,2019-08-14 18:20:40.257925,,Lecture,1,False,False,True,False,False,shaped ,False,,,Lecture,,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
       
    def add_rectangle(self, rectangle):
    """"""appends rectangle as a parameter into rectangles list
    
    """"""
    self.rectangles.append(rectangle)
    
def get_same_area_rects(self, numb):
    """"""return a comprehensive list of all of the rectangles of same area
    
    """"""
    same_area_list = []
    for rectangle in self.rectangles:
        if rectangle == numb:
            same_area_list.append(rectangle)
    return same_area_list
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,,maximum recursion depth exceeded,0.0,,0,0,0,1,0,0,0,0,0,1,1,0,0,0,1
55,2019-08-12 06:41:55,2019-08-11 21:06:35,0,,11,26,0,2019-08-11 22:41:32,R_2zSgjYTKNLq2vFz,,,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,yes,yes,no,no,no,yes,no,1,695,1,0,1,1,2019-08-06 18:59:07.931893,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,,,8.0,False,67.0,maximum recursion depth exceeded,0.0,,0,1,0,0,0,1,0,1,0,0,0,0,0,0,1
60,2019-08-11 23:47:53,2019-08-11 19:47:28,0,,11,312,0,2019-08-12 12:05:04,R_3j6z1eTTGnS324t,,,,,,,anonymous,EN,,,280.929,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,no,no,no,yes,no,yes,1,1491,1,1,1,1,2019-08-12 01:06:01.737927,,Lecture,1,False,False,True,False,False,shaped ,False,,,Lecture,2019-08-12 02:35:06.633358,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, other: 'Rectangle') -> None:
        
        self.rectangles.append(other)
    
    def get_same_area_rects(self, area: int) -> List[Rectangle]:
        
        result = []
        
        for rect in self.rectangles:
            if rect == self.area
                   result.append(rect)
        
        return result
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",8.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0326 (bad-whitespace)  Number of occurrences: 1.<br />  &emsp;[Line 39] No space allowed around keyword argument assignment<br /><br />W0612 (unused-variable)  Number of occurrences: 2.<br />  &emsp;[Line 39] Unused variable 'add_rectangle'<br />&emsp;[Line 41] Unused variable 'get_same_area_rects'<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,0,1,1,0,1,0,1,0,0,0,0,1
63,2019-08-09 10:38:48,2019-08-11 21:22:08,0,,11,2,0,2019-08-12 01:40:26,R_2QXVBqLXs30meIR,,,,,,,anonymous,EN,,80.715,,,Chrome,,,,,,,,,,,,,,,,,,,,1,,,68,no,stop,yes,yes,no,no,no,no,no,1,7521,1,0,1,1,2019-08-11 21:53:09.813306,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-09 07:21:54.806499,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
         lst = []
        for r in self.rectangles:
            if r.get_area() == area:
                lst.append(r)
        return lst
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.125,,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1
65,2019-08-11 21:30:23,2019-08-08 16:31:17,0,,100,8133,0,2019-08-12 01:06:54,R_33x7onrqNwXl4VK,,,,,,,anonymous,EN,,12.158,23.134,4,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,yes,no,no,no,yes,yes,1,5302,1,1,1,1,2019-08-12 00:24:17.902914,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 03:28:32.677189,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""
        
        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self,    
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0602 (undefined-variable)  Number of occurrences: 2.<br />  &emsp;[Line 41] Undefined variable 'self'<br />&emsp;[Line 45] Undefined variable 'rect'<br /><br />=== Style/convention errors (fix: before submission) ===<br />E0213 (no-self-argument)  Number of occurrences: 2.<br />  &emsp;[Line 40] Method should have ""self"" as first argument<br />&emsp;[Line 43] Method should have ""self"" as first argument<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing",0.0,,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1
66,2019-08-10 18:00:42,2019-08-11 14:09:27,0,,100,600,0,2019-08-10 16:41:58,R_3PNXEv5dDM4ELBM,,,,,,,anonymous,EN,5.753,41.605,,,,,,,,,,,,"First I will read the return type, and then I read the description and examples and try to figure out my answer.",,,,,,,,,,,4,,,68,no,no,no,yes,no,yes,yes,no,no,1,352,1,0,1,1,2019-08-11 01:51:54.058618,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 04:18:22.944245,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",4.0,False,67.0,,1.0,,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1
69,2019-08-11 21:41:50,2019-08-09 13:11:00,0,,11,51,0,2019-08-17 18:21:38,R_1gGxdw1wLLL9O6k,,,,,,,anonymous,EN,,,,,,76.0.3809.100,,,,,,,,,,,,,,,,,,,1,nah,,68,no,stop,no,yes,no,yes,yes,no,yes,1,1006,1,1,1,1,2019-08-15 00:12:16.630070,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-11 22:01:41.422017,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []

    def add_rectangle(self, new_rect: 'Rectangle') -> None:
        self.rectangles.append(new_rect)
    
    def get_same_area_rects(self, num: int) -> List[object]
        lst = []
        for rectangle in self.rectangles:
            if rectangle.get_area() == num:
                lst.append(rectangle)
        return lst
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0301 (line-too-long)  Number of occurrences: 1.<br />  &emsp;[Line 43] Line too long (127/80),0.25,,0,0,0,0,1,1,0,1,0,0,1,0,0,0,1
70,2019-08-12 08:17:40,2019-08-09 01:11:17,0,,11,2052,0,2019-08-12 12:08:59,R_12FO5klojjFAGJD,,,,,,,anonymous,EN,,,,,,76.0.3809.100,,,,,,,,,,,,,,,,,,,1,,,68,no,no,no,yes,no,no,yes,yes,yes,1,681,1,1,1,1,2019-08-11 16:05:07.060660,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-10 22:45:26.049310,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,True,,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 46] expected an indented block (<string>, line 46)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,follow the lecture  ,74,0,0,0,0,0,0,1,0,0,1,0,0,0,1
71,2019-08-14 12:33:06,2019-08-10 14:54:20,0,,100,1,1,2019-08-12 12:59:36,R_1QyCsymnyOa9ENx,,,,,,,anonymous,EN,5.117,,62.69,1,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,stop,no,no,no,yes,no,yes,yes,1,312,1,1,0,1,2019-08-12 15:12:08.553746,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-11 20:31:44.766019,,0.0,,67.0,,0.0,,0,1,0,0,0,1,1,1,0,1,0,0,0,0,1
72,2019-08-12 07:49:47,2019-08-09 15:21:03,0,,11,1575,0,2019-08-11 17:00:05,R_3shmFlpd2l7iPl8,,,,,,,anonymous,ZH-S,9.676,,,,Safari,,,,,,,,,,,,,,,,,,,,6,,,68,yes,no,yes,yes,no,no,yes,yes,yes,1,966,1,0,1,1,2019-08-11 23:27:48.531755,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 14:24:18.235196,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
       
    def add_rectangle(self, rec: Rectangle) -> None:
        self.append(rec)
    
    def get_same_area_rects(self, area):
        out = []
        for i in self.rectangles:
            if i.get_area() == area:
                out.append(i)
        return out
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!,0.0,,112,0,1,1,1,1,0,0,0,1,0,0,0,0,1
73,2019-08-11 19:54:19,2019-08-11 14:41:24,0,,11,146,1,2019-08-12 11:29:49,R_3PXdlSQIKcBlWW2,,,,,,,anonymous,EN,,3.585,,2,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,no,no,no,no,yes,no,1,50,1,0,1,1,2019-08-12 03:49:50.295394,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:09:49.772176,,0.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 38] unexpected indent (<string>, line 38)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",1.0,,8,0,1,1,1,1,0,0,0,0,0,0,0,0,1
76,2019-08-12 08:10:01,2019-08-09 18:11:08,0,,11,2,0,2019-08-12 13:51:57,R_1kNSOgVPodZ62kl,,,,,,,anonymous,KO,,,,,Chrome,,,1280x720,,,,,,,,,,,,,,,,,1,,,68,yes,no,yes,yes,no,yes,yes,no,yes,1,1066,1,0,1,1,2019-08-12 16:00:02.538978,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 04:57:27.826724,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        same_area_list = []
        for rectangle in self.rectangles:
            if rectangle == numb:
            same_area_list.append(rectangle)
    return same_area_list
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 51] invalid syntax (<string>, line 51)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1
77,2019-08-09 19:01:56,2019-08-11 17:34:07,0,,100,522,0,2019-08-12 11:38:55,R_1DYjcKioMfYlbAn,,,,,,,anonymous,ZH-T,4.499,,30.141,3,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,research,no,no,no,no,yes,no,no,1,1635,1,0,1,1,2019-08-12 03:13:43.310014,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 05:21:59.173756,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangle_list = []
 
    def add_rectangle(self, rectangle):
        self.rectangle_list.append(rectangle)
 
    def get_same_area_rects(self, area):
        temp_list = []
        for rectangle in self.rectangle_list:
            if rectangle.get_area == area:
                temp_list.append(rectangle)
        return temp_list
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 40] invalid syntax (<string>, line 40)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,,0,1,0,1,1,0,0,1,0,1,1,0,0,0,1
78,2019-08-11 20:36:47,2019-08-08 16:50:14,0,,11,4936,0,2019-08-12 13:40:46,R_eShbiE0UJjc9TWx,,,,,,,anonymous,ZH-S,,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,research,yes,yes,no,yes,no,yes,yes,1,705,1,0,1,1,2019-08-12 00:55:57.211671,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 14:47:21.999376,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    
    def add_rectangle(self, rectangle):
        """"""appends rectangle as a parameter into rectangles list
        """"""
        self.rectangles.append(rectangle)
    
    def get_same_area_rects(self, numb):
        """"""return a comprehensive list of all of the rectangles of same area
        """"""
        same_area_list = []
        for rectangle in self.rectangles:
            if rectangle == numb:
                same_area_list.append(rectangle)
        return same_area_list
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,True,,=== Code errors/forbidden usage (fix: high priority) ===<br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 46] Undefined variable 'get_area'<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!,0.5,,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1
80,2019-08-11 14:34:05,2019-08-11 20:00:19,0,,11,1696,0,2019-08-12 03:34:07,R_25YkznClguaZqJP,,,,,,,anonymous,EN,3.585,,,,,,,1368x912,,,,,,,,,,,,,,,,,1,,,68,yes,research,no,yes,no,no,no,no,no,1,20,0,0,1,1,2019-08-12 15:40:56.290406,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:27:37.482662,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",,True,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 46] invalid syntax (<string>, line 46)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,,0,0,1,1,0,0,0,1,0,0,0,0,0,0,1
82,2019-08-11 15:37:54,2019-08-11 22:47:58,0,,11,434,0,2019-08-12 11:30:47,R_1BM4z5b1il6vOZb,,,,,,,anonymous,EN,22.645,,,,,,,1440x900,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,no,no,yes,no,yes,no,1,592,1,0,1,1,2019-08-12 06:44:21.711308,,Lecture,1,False,False,True,False,False,eclipse,False,,,,2019-08-11 00:23:44.489175,,0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,0,0,1,1,1,0,0,1,0,0,0,1
83,2019-08-09 01:08:51,2019-08-09 13:47:12,0,,11,1784,0,2019-08-12 11:18:32,R_1M4Xp1KqYCopRxe,,,,,,,anonymous,EN,365.105,11.331,,,,,Windows NT 10.0,,,,,,,,,,,,,,,,,,1,,,68,no,stop,no,no,no,yes,yes,no,no,1,1348,1,0,1,1,2019-08-15 03:27:21.481082,,Lecture,1,False,False,True,False,False,eclipse,False,,,,2019-08-12 02:06:39.740989,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
        self.rectangles = []
    
    
    def add_rectangle(self, rectangle: ""Rectangle""):
        self.rectangles.append(rectangle)
        
    
    def get_same_area_rect(self, area: int):
        lst = []
        for r in self.rectangles:
            if r.get_area() == area:
                lst.append(r)
        return lst
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",8.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,1,1,0,0,1,0,0,0,0,0,0,1
89,2019-08-09 13:28:44,2019-08-11 12:13:30,0,,11,100,0,2019-08-09 23:07:52,R_1Ej10HrLNx4THUh,,,,,,,anonymous,EN,,,28.234,7,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,research,no,no,no,yes,yes,yes,no,1,627,1,0,1,1,2019-08-12 12:18:45.163703,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 05:29:48.628411,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1
90,2019-08-12 01:04:47,2019-08-09 22:52:20,0,,100,1635,1,2019-08-12 02:19:06,R_cu0xL1BF9JBGWKR,,,,,,,anonymous,ZH-S,,153.352,,,Chrome,,CrOS x86_64 12105.100.0,,,,,,,,,,,,,,,,,,1,,,68,yes,stop,no,yes,no,yes,yes,yes,no,1,1050,1,0,1,1,2019-08-11 21:27:20.766304,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 04:36:36.404272,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangle(self,rect):
        self.rectangles.append(rect)
    def get_same_area_rects(self,area):
        rects = []
        for rect in self.rectangles:
            if area == rect.get_area():
                rects.append(rect)
        return rects       
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1
93,2019-08-11 22:07:31,2019-08-11 09:52:13,0,,11,109,0,2019-08-11 22:20:32,R_3MAI1FX5Bt1GBvs,,,,,,,anonymous,ZH-S,,,,,Chrome,,,,,,,,,,,,,,,,,,,,2,,,68,yes,research,no,yes,no,no,yes,no,yes,1,724,1,0,1,1,2019-08-09 23:15:55.578735,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 13:54:43.003300,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        def __init__(self):
    """""" (RectangleCollection) -> NoneType

    >>> rc = RectangleCollection()
    >>> rc.rectangles
    []
    """"""

    self.rectangles = []

    def get_same_area_rects(self, number):

    """"""
    >>>rc = RectangleCollection()
    >>>r1 = Rectangle(10, 20)
    >>>r2 = Rectangle(15, 20)
   >>> r3 = Rectangle(20, 10)
    >>>rc.rectangles.extend([r1, r2, r3])
    >>>res = rc.get_same_area_rects(200)
    >>>res == [r1, r3]
    True

    """"""
    self.number = number

    a = self.rectangles.expend(self.area())
    if number == self.rectangles.area():
        return True

    return False
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,list index out of range,1.0,,0,0,1,0,1,0,1,1,0,0,1,0,0,0,1
98,2019-08-11 17:57:48,2019-08-17 15:32:02,0,,100,904,0,2019-08-12 01:56:53,R_z5Y4sffQ0BWvBIt,,,,,,,anonymous,EN,,,155.976,,Chrome,,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,yes,yes,no,no,no,yes,no,1,1,1,0,1,1,2019-08-12 03:47:31.241871,,Lecture,1,False,False,True,False,False,eclipse,False,,,,2019-08-12 03:36:40.572270,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        rc.rectangles = []
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
99,2019-08-12 00:09:16,2019-08-12 09:42:22,0,,11,145,0,2019-08-12 01:49:50,R_3MrGXo0pBftvTk0,,,,,,,anonymous,EN,,,,,Chrome,,,,,,,,,,,,,,,,,,,,1,,,68,yes,research,no,yes,no,yes,yes,no,no,1,614,1,0,1,1,2019-08-11 18:11:00.649448,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-10 04:52:16.764088,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
   def add_rectangle(self, Rectangle) -> list:
       return self.rectangles.append(Rectangle)
    
   def get_same_area_rects(self, number: int) -> list:
        if number == self.get_area:
            return self.rectangles
        else:
            return []
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 45] Undefined variable 'self'<br /><br />=== Style/convention errors (fix: before submission) ===<br />E0213 (no-self-argument)  Number of occurrences: 1.<br />  &emsp;[Line 43] Method should have ""self"" as first argument<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing",0.0,,0,0,0,0,1,0,1,1,0,1,0,0,0,0,1
100,2019-08-09 15:17:23,2019-08-11 16:32:39,0,,11,857,0,2019-08-10 13:25:25,R_3FVSWlnbYLzH4II,,,,,,,anonymous,EN,,,,,,75.0.3770.100,,,,"try to submit and check the answer point
",,,,,,,,,,,,,,,1,meh,,68,no,stop,no,yes,no,yes,yes,no,no,1,143,1,1,1,1,2019-08-12 01:58:51.441202,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 02:15:06.973289,,0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,30,0,0,1,0,0,1,1,0,0,1,0,0,0,1
102,2019-08-08 21:12:03,2019-08-11 21:18:05,0,,11,219,0,2019-08-09 16:12:23,R_3EojR6jnP1cUsAp,,,,,,,anonymous,ZH-S,,,79.35,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,yes,yes,no,yes,no,no,yes,1,25,1,1,1,1,2019-08-13 12:44:02.935738,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 03:51:37.273473,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
    def add_rect(self, r: Rectangle) -> None:
        self.rectangles.append(r)
    
    def get_same_area_rects(self, area: int) -> list:
        lst = []
        for r in self.rectangles:
            if r.get_area() == area:
                lst.append(r)
        return list
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 46] Undefined variable 'get_area'<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0621 (redefined-outer-name)  Number of occurrences: 2.<br />  &emsp;[Line 40] Redefining name 'Rectangle' from outer scope (line 3)<br />&emsp;[Line 45] Redefining name 'Rectangle' from outer scope (line 3),0.0,,0,0,1,1,0,0,1,1,0,1,1,0,0,0,1
103,2019-08-09 16:37:22,2019-08-11 07:50:50,0,,100,454,0,2019-08-11 11:50:54,R_2w4aN3P46cCdIQZ,,,,,,,anonymous,EN,12.299,,,,,76.0.3809.100,,,,,,,,,,,,,,,,,because the maximum number is given by 'self.size'.,,1,,,68,no,stop,no,yes,no,yes,no,no,no,1,133,1,0,1,1,2019-08-12 01:25:33.610311,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangle(self, Rectangle) -> list:
        self.rectangles.append(Rectangle)
    def get_same_area_rects(self, num) -> list:
        same_area_lst = []
        for rectangle in self.rectangles:
            if rectangle == num:
                same_area_lst.append(rectangle)
        return same_area_lst
        
    
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E1101 (no-member)  Number of occurrences: 1.<br />  &emsp;[Line 41] Instance of 'RectangleCollection' has no 'append' member<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,1,0,0,1,1,0,0,0,1,0,0,0,1
104,2019-08-11 17:37:43,2019-08-10 12:52:31,0,,11,282,0,2019-08-12 12:32:15,R_73rQKD2c4ep7Blv,,,,,,,anonymous,EN,7.813,26.163,49.254,,,75.0.3770.142,Macintosh,,,,,,,,,,,,,,,,,,4,,,68,no,stop,no,no,no,no,no,yes,no,1,0,1,0,1,1,2019-08-10 17:15:37.889085,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:52:41.487076,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        def add_rectangle(self, r = Rectangle) -> None:
            self.rectangles.append(r)
        def get_same_area_rects(self, i: int) -> int:
            lists = []
            for r in self.rectangles:
                if r.get_area() == i:
                    lists.append(r)
            return lists
                
            
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,True,67.0,,0.5,,53,0,0,1,0,0,1,0,0,1,0,0,0,0,1
108,2019-08-11 18:23:33,2019-08-10 14:34:01,0,,11,814,0,2019-08-12 12:55:28,R_RF806FOK3JOgiKR,,,,,,,anonymous,EN,,,,7,,,,,,,,,,,,,,,,,,,,,4,,,68,yes,research,no,no,no,no,no,yes,yes,1,1784,1,0,1,1,2019-08-10 16:57:36.834778,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 05:22:21.804594,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
    self.rectangles = []
    
    def add_rectangle(self, rectangle: Rectangle) -> None:
        """""" add_rectangle that takes a Rectangle as a parameter and appends it to the rectangles list
        """"""
        slef.rectangles.append(rectangle)
        
    def get_same_area_rects(area: int, rectangle: Rectangle) -> list:
        """"""Takes a number as a parameter and returns a list of all Rectangles from the rectangles list that have area
        """"""
        result = []
        for rectangles in rectangle:
            if area == get_area(rectangle):
                result.append(rectangle)
        return result
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0602 (undefined-variable)  Number of occurrences: 3.<br />  &emsp;[Line 40] Undefined variable 'self'<br />&emsp;[Line 43] Undefined variable 'self'<br />&emsp;[Line 44] Undefined variable 'get_area'<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0326 (bad-whitespace)  Number of occurrences: 1.<br />  &emsp;[Line 39] No space allowed before bracket<br /><br />E0213 (no-self-argument)  Number of occurrences: 2.<br />  &emsp;[Line 39] Method should have ""self"" as first argument<br />&emsp;[Line 41] Method should have ""self"" as first argument<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing",0.0,,0,0,1,0,1,0,0,1,0,1,0,0,0,0,1
113,2019-08-10 10:11:21,2019-08-11 18:41:14,0,,11,1006,0,2019-08-12 02:47:32,R_sd1qLYeEInD99VD,,,,,,,anonymous,EN,7.029,,,,Chrome,18.18362,Windows NT 10.0,,,,,,,,"It made the most sense, it does what is asked.",,,,,,,,,,1,,,68,no,research,no,no,no,yes,yes,no,yes,1,1142,1,0,1,1,2019-08-12 14:41:45.298542,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-09 00:10:15.273126,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self = list
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,,67.0,,0.375,,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1
114,2019-08-12 09:33:47,2019-08-12 04:03:32,0,,11,1,0,2019-08-11 17:56:17,R_SBgvBNrqELKqWSR,,,,,,,anonymous,EN,26.781,76.521,,,,75.0.3770.142,,,,,,,,,,,,,,,,,,,1,,,68,yes,research,yes,no,no,no,yes,no,no,1,1,1,0,1,1,2019-08-13 21:40:04.188457,,Lecture,1,False,False,True,False,False,eclipse,False,,,,,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, Rectangle) -> None:
        """"""
        >>> r = Rectangle(10, 20)
        >>> add_rectangle(r)
        >>> r
        [r]
        """"""
        self.rectangles.apppend(Rectangle)
        
    def get_same_area(self, area: int) -> list:
        """"""
        >>> r = Rectangle(10, 20)
        >>> re = Rectangle(11, 12)
        >>> rc = [r, re]
        >>> get_same_area(200)
        [r]
        """"""
        rectangle_list = []
        for rectangle in self:
            if get_area(rectangle) == area:
                rectangle_list.append(rectangle)
        return rectangle_list
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />E0101 (return-in-init)  Number of occurrences: 1.<br />  &emsp;[Line 32] Explicit return in __init__<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,1,1,0,0,1,0,0,1,0,0,0,1
119,2019-08-11 23:37:41,2019-08-11 22:20:32,0,,11,442,0,2019-08-11 10:43:24,R_2Vg8o1oZPDdZbNP,,,,,,,anonymous,EN,,,84.323,,,,Windows NT 10.0,,,,,,,,,,,,,,,,,,1,,,68,no,no,yes,no,no,no,no,no,yes,1,2231,1,1,1,1,2019-08-12 13:36:45.543092,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-08 23:12:58.392945,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, r: Rectangle) -> None:
        self.rectangles.append(r)

    def get_same_area_rects(self, area: int) -> list:
        lst = []
        for r in self.rectangles:
            if r.get_area() == area:
                lst.append(r)
        return lst
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,0,0,0,0,1,0,1,1,0,0,0,1
120,2019-08-11 22:50:20,2019-08-08 21:12:04,0,,100,182,1,2019-08-11 23:03:55,R_3R9rHXdnHpY5kIE,,,,,,,anonymous,EN,,,,,,75.0.3770.142,Macintosh,1280x720,,,,,,,,,,,,,,,,,4,,,68,yes,research,yes,yes,no,yes,no,yes,no,1,1575,1,1,1,1,2019-08-12 13:48:19.282629,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-11 22:09:18.126952,,4.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,1.0,,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1
123,2019-08-12 09:44:20,2019-08-12 07:18:05,0,,11,705,0,2019-08-12 12:09:12,R_3HzZLiY5pCMTnHc,,,,,,,anonymous,EN,,37.472,,6,Safari,,,,,,,,,,,,,,,,,,,,1,,,68,no,research,yes,no,no,yes,yes,no,no,1,944,1,0,1,1,2019-08-13 18:46:06.368901,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-11 20:07:42.272522,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangle(self): 
        """"""Return List with rectangle appened to it""""""
    
        return self.append(Rectangle)

4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E1101 (no-member)  Number of occurrences: 1.<br />  &emsp;[Line 38] Instance of 'RectangleCollection' has no 'get_area' member<br /><br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 40] Undefined variable 'sqrt'<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0326 (bad-whitespace)  Number of occurrences: 1.<br />  &emsp;[Line 42] Exactly one space required after comma<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,100,0,1,0,0,1,0,0,0,0,0,0,0,0,1
135,2019-08-09 17:54:17,2019-08-12 09:40:42,0,,100,1171,0,2019-08-12 13:43:54,R_yJXY51L0dTAQpZT,,,,,,,anonymous,EN,,,143.766,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,stop,no,no,no,yes,yes,yes,no,1,1509,0,0,1,1,2019-08-12 01:40:50.781738,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 05:43:41.864344,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, rectangle: ""Rectangle""):
        
        self.rectangle = rectangle
        self.rectangles.append(rectangle)
        
    def get_same_area_rects(area: int)
        l = []
        self.area = area
        for r in self.rectangles:
            if r == area:
                l.append(r)
        return l
                
        
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,True,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,1,0,1,0,1,0,0,1,0,0,0,1
140,2019-08-09 08:55:09,2019-08-12 09:13:38,0,,11,13,0,2019-08-12 13:14:28,R_22IYjjGKHbQw4F8,,,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,stop,no,yes,no,no,no,no,yes,1,2,1,0,1,1,2019-08-12 05:34:28.219089,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:22:53.469068,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangels
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,maximum recursion depth exceeded,0.0,,0,0,1,1,0,1,0,0,0,1,0,0,0,0,1
147,2019-08-11 22:08:55,2019-08-10 18:44:48,0,,11,944,1,2019-08-11 01:41:03,R_31BGv6gvtndH7c0,,,,,,,anonymous,EN,,5.753,,2,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,no,no,yes,no,yes,yes,1,523,0,0,1,1,2019-08-13 21:04:01.030285,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 02:01:13.268250,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,,=== Code errors/forbidden usage (fix: high priority) ===<br />E1101 (no-member)  Number of occurrences: 1.<br />  &emsp;[Line 28] Instance of 'Rectangle' has no 'rectangles' member<br /><br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 29] Undefined variable 'area'<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1
149,2019-08-10 12:10:08,2019-08-11 17:00:42,0,,11,1,0,2019-08-11 15:05:24,R_12s8jyMLr7X2Uk7,,,,,,,anonymous,EN,,,,,,,Windows NT 10.0,,,,,,,,,,,,,,,,,,1,,,68,no,stop,no,no,no,yes,yes,yes,yes,1,182,1,0,1,1,2019-08-14 04:47:51.119283,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-09 21:41:19.023123,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def get_same_area_rects(self, number):    
        self.number = number
         rec_area = self.rectangles.extend(self.area())
        if number == rec_area:
            return True
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 46] Undefined variable 'get_area'<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!,1.0,,0,0,1,0,0,1,1,1,0,0,0,0,0,0,1
153,2019-08-11 22:57:24,2019-08-09 12:12:06,0,,11,40,0,2019-08-09 22:11:14,R_3ff60fKXFPsmW7o,,,,,,,anonymous,EN,,172.757,,2,,75.0.3770.142,Macintosh,,,,,,,,,,,,,,,,,,1,,,68,yes,no,yes,yes,no,no,no,yes,yes,1,0,0,0,1,1,2019-08-15 03:39:12.385755,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 13:29:34.138300,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangle(self, a: Rectangle) -> None:
        self.rectangles.append(a)
    def get_same_area_rects(self, areas: int) -> list:
        lists = []
        for a in self.rectangles:
            if a.get_area() == areas:
                lists.append(a)
        return lists
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,True,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1
156,2019-08-12 07:13:09,2019-08-11 19:55:59,0,,11,512,0,2019-08-14 17:08:06,R_3nw6VfTa99qfXCt,,,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,,,4,,,68,yes,no,no,yes,no,no,no,yes,no,1,4689,1,0,1,1,2019-08-11 17:21:10.942545,,Lecture,1,False,False,True,False,False,monokai,False,,,Lecture,2019-08-14 02:07:07.561934,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self):
    """""" (RectangleCollection) -> NoneType

    >>> rc = RectangleCollection()
    >>> rc.rectangles
    []
    """"""

    self.rectangles = []

    def get_same_area_rects(self, number):

    """"""
    >>>rc = RectangleCollection()
    >>>r1 = Rectangle(10, 20)
    >>>r2 = Rectangle(15, 20)
   >>> r3 = Rectangle(20, 10)
    >>>rc.rectangles.extend([r1, r2, r3])
    >>>res = rc.get_same_area_rects(200)
    >>>res == [r1, r3]
    True

    """"""
    self.number = number

    a = self.rectangles.expend(self.area())
    if number == self.rectangles.area():
        return True

    return False
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",4.0,,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E1102 (not-callable)  Number of occurrences: 1.<br />  &emsp;[Line 48] self.rectangles is not callable<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!,1.0,,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1
157,2019-08-11 19:58:05,2019-08-10 15:49:50,0,,11,290,0,2019-08-09 14:43:33,R_WxR0sMAdbakTN4t,,,,,,,anonymous,KO,,,13.321,,,76.0.3809.100,,1280x800,,,,,,,,,,,,,,,,,1,,,68,no,stop,no,no,no,no,yes,no,yes,1,1982,1,1,1,1,2019-08-12 13:13:32.662283,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-11 18:19:50.495247,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(rect):
        self.rectangles.append(rect)
    
    def get_same_area_rects(area) -> list:
           
        return [x == area for x in rect]
       
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,True,67.0,,0.5,,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1
162,2019-08-11 12:11:03,2019-08-11 15:55:40,0,,11,348,0,2019-08-10 20:54:58,R_Dl5LosUM8x8kcH7,,,,,,,anonymous,EN,,,,2,Chrome,,Windows NT 10.0,,,,,,,,,,,,,,,,,,1,,,68,yes,stop,no,no,no,no,no,no,yes,1,536,1,0,1,1,2019-08-10 19:45:28.108938,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-09 21:21:54.748205,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
        # Write a method add_rectangle that takes a Rectangle as a parameter and appends it to the rectangles list. Write a method get_same_area_rects that takes a number as a parameter and returns a list of all Rectangles from the rectangles list that have that area.
        
    def add_rectangle(self, Rectangle: r) -> None:
        return self.rectangles.append(Rectangle)
    
    def get_same_area_rects(self, number: n) -> list: 
        list = []
        for r in self.rectangles:
            if r.get_area() == number:
                list.append(r)
        return list
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,,0.0,,0,0,0,0,1,0,0,1,0,0,1,0,0,0,1
163,2019-08-11 18:52:13,2019-08-10 12:11:13,0,,11,158,0,2019-08-12 13:45:36,R_2xOVUey5leyGPNQ,,,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,no,no,yes,yes,no,no,no,no,yes,1,10,0,0,1,1,2019-08-11 21:22:28.411481,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:59:09.575596,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
        
   #write a method 
        #append to rectangle list
        
    def __add_rectangle__(self, rectangle: int) -> List:
        """"""
        """"""
        
        return self.rectangles(rectangle)
        
        
    #number as parameter, returns a list of rectangles    
        
    def __get_same_area_rects__(self, area: int) -> List:
        """"""
        """"""
        new_list = []
        
        if area in self.rectangles:
            new_list.append(area)
        return new_list    
            
            
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0326 (bad-whitespace)  Number of occurrences: 3.<br />  &emsp;[Line 39] Exactly one space required after comma<br />&emsp;[Line 41] Exactly one space required after comma<br />&emsp;[Line 42] Exactly one space required around assignment<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,1,0,1,1,0,0,0,0,0,0,0,0,1
164,2019-08-10 16:41:22,2019-08-11 22:46:52,0,,11,3912,0,2019-08-11 05:37:15,R_2rrAhNcA0dNQH8x,,,,,,,anonymous,EN,,36.885,,,,,,,,,,,,,,,,,,,,,,,3,,,68,yes,no,yes,no,no,no,yes,no,yes,1,3987,0,0,1,1,2019-08-12 15:17:11.227003,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-09 18:00:07.414037,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangle(self, rec: ""Rectangle"") -> None:
        self.rectangles.append(rec)
    def get_same_rects(self, area: int) -> List:
        ass = []
        for item in self.rectangle:
            if area == item:
                ass.append(item)
",0.0,True,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,1,1,1,1,0,0,0,1,0,0,0,1
165,2019-08-12 07:30:53,2019-08-12 09:45:18,0,,11,8513,0,2019-08-10 02:52:27,R_3HRqwqzdrQ1DxvO,,,,,,,anonymous,EN,17.073,,,,,,Windows NT 10.0,1440x900,,,,,,,,,,,,,,,,,1,,,68,no,no,yes,no,no,yes,yes,yes,yes,1,522,1,1,1,1,2019-08-11 17:58:17.522499,,Lecture,1,False,False,True,False,False,eclipse,False,,,,,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.area = self.get_area()
        rc = []
        for i in range(sqrt(self.area)):
            if self.area % i == 0:
                rc.append(Rectangle(i,self/i))
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",8.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,1,1,1,1,1,0,0,0,0,0,0,0,1
166,2019-08-09 12:04:35,2019-08-11 19:28:46,0,,11,11,0,2019-08-12 03:29:52,R_7aNdPO8eoHj9ezD,,,,,,,anonymous,ZH-S,,,,4,,,,1280x720,,,,,,,,,,,,,,,,,7,,,68,no,research,yes,yes,no,no,no,yes,yes,1,4137,1,0,1,1,2019-08-13 20:52:16.779543,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:59:33.322161,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, rc: ""Rectangle"") -> list:
        self.rectangles.append(rc)
    
    def get_same_area_rects(num: int) -> list:
        L = []
        for item in self.rectangles:
            if item.get_area() == num:
                L.append(item)
        return L
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",2.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E0602 (undefined-variable)  Number of occurrences: 3.<br />  &emsp;[Line 44] Undefined variable 'self'<br />&emsp;[Line 51] Undefined variable 'self'<br />&emsp;[Line 52] Undefined variable 'numb'<br /><br />E0601 (used-before-assignment)  Number of occurrences: 1.<br />  &emsp;[Line 44] Using variable 'rectangle' before assignment<br /><br />E0104 (return-outside-function)  Number of occurrences: 1.<br />  &emsp;[Line 54] Return outside function<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,51,0,0,0,1,1,1,0,0,1,1,0,0,0,1
171,2019-08-12 06:48:33,2019-08-11 21:52:21,0,,11,1673,0,2019-08-09 15:48:34,R_0vS3BP9Q0QxFwDD,,,,,,,anonymous,ZH-S,,,,,,,,,,,,,,,,,,,,,,,,,5,,,68,yes,stop,no,yes,no,yes,no,yes,yes,1,2,1,1,1,1,2019-08-12 15:29:17.034003,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 00:18:12.540075,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, r: Rectangle):
        self.rectangles.append(r)
        
    def get_same_area_rects(self, num: int):
        same_area = []
        for rectangle in self.rectangles:
            if rectangle.get_area() == num:
                same_area += [rectangle]
        return same_area
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",8.0,True,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0326 (bad-whitespace)  Number of occurrences: 4.<br />  &emsp;[Line 47] Exactly one space required after comma<br />&emsp;[Line 47] No space allowed before :<br />&emsp;[Line 51] Exactly one space required around assignment<br />&emsp;[Line 53] Exactly one space required around comparison<br /><br />C0112 (empty-docstring)  Number of occurrences: 2.<br />  &emsp;[Line 40] Empty method docstring<br />&emsp;[Line 47] Empty method docstring<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,1,0,1,0,1,0,1,0,1,1,0,0,0,1
172,2019-08-12 09:12:01,2019-08-09 09:02:43,0,,11,523,1,2019-08-12 03:37:44,R_1rD5wtfIYk4PaZt,,,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,,,5,,,68,yes,stop,no,no,no,no,yes,no,no,1,440,1,0,1,1,2019-08-11 21:37:23.070433,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-08 00:12:35.341821,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 39] expected an indented block (<string>, line 39)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,,0,0,0,1,0,1,1,1,0,1,1,0,0,0,1
173,2019-08-12 06:41:13,2019-08-12 07:29:43,0,,11,8,0,2019-08-12 00:20:54,R_QbwAVOlOJpl44cp,,,,,,,anonymous,EN,,,,,,76.0.3809.100,,1366x768,,,,,,,,,,,,,,,,,1,,,68,no,research,yes,yes,no,no,no,no,no,1,0,1,0,1,1,2019-08-12 14:58:09.858029,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 02:45:21.620336,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height
        
class RectangleCollection:
    def __init__(self):
        """""" (RectangleCollection) -> NoneType
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangle(self, rect):
        self.rectangles.append(rect)
    def get_same_area_rects(self, area_value):
        #return list(filter(lambda rect:rect.get_area==area_value, self.rectangles))
        return [rect for rect in self.rectangles if rect.get_area == area_value]
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0602 (undefined-variable)  Number of occurrences: 3.<br />  &emsp;[Line 38] Undefined variable 'self'<br />&emsp;[Line 43] Undefined variable 'slef'<br />&emsp;[Line 50] Undefined variable 'get_area'<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0301 (line-too-long)  Number of occurrences: 2.<br />  &emsp;[Line 41] Line too long (101/80)<br />&emsp;[Line 46] Line too long (117/80)<br /><br />R0201 (no-self-use)  Number of occurrences: 1.<br />  &emsp;[Line 40] Method could be a function<br /><br />E0213 (no-self-argument)  Number of occurrences: 1.<br />  &emsp;[Line 45] Method should have ""self"" as first argument<br /><br />W0612 (unused-variable)  Number of occurrences: 1.<br />  &emsp;[Line 49] Unused variable 'rectangles'<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing",0.0,,0,0,1,0,1,1,1,0,0,1,1,0,0,0,1
174,2019-08-12 09:33:43,2019-08-12 08:59:15,0,,11,1980,0,2019-08-12 06:48:59,R_RE6BiyyMQYI6iVX,,,,,,,anonymous,EN,,,,,,,,1280x800,,,,,,,,,,,,,,,,,1,,,68,yes,no,yes,no,no,yes,no,no,yes,1,2427,1,1,1,1,2019-08-12 21:00:31.841264,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,,,4.0,False,67.0,,0.0,,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1
181,2019-08-11 09:52:12,2019-08-11 22:55:27,0,,11,99,0,2019-08-12 08:04:09,R_3QQbcmmck7Te3ni,,,,,,,anonymous,EN,27.935,,,,,10.1.1,,,,,,,,,,,,,,,,,,,4,,,68,no,stop,no,yes,no,no,no,yes,yes,1,1696,1,0,1,1,2019-08-12 00:28:39.970591,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
        self.rectangles = []
        
    def add_rectangle(self, rectangle: int) -> None:
        self.rectangles.append(rectangle)
        
    def get_same_area_rects(self, area: int)-> None:
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,1.0,,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1
182,2019-08-11 22:20:20,2019-08-12 08:40:18,0,,100,2291,1,2019-08-11 21:34:20,R_XMIZcwXymAJsn8B,,,,,,,anonymous,EN,,,156.804,,,,,,,,,,,,,,,,,,,,,,1,,,68,no,stop,no,yes,no,yes,no,no,yes,1,25,0,1,1,1,2019-08-11 17:04:11.772981,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-11 20:11:04.101124,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangle (rectangle) -> None:
        self.rectangles.append(rectangle)
    def get_same_area_rect(area: int) -> list:
        a = []
        for i in self.rectangles:
            if get_area(i) == area:
                a.append(i)
        return a 
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",6.0,,67.0,,0.0,,0,0,0,1,0,0,0,1,0,1,1,0,0,0,1
183,2019-08-12 07:41:29,2019-08-12 09:56:52,0,,11,724,1,2019-08-12 01:14:27,R_UKEzYaW1CRsbJ7P,,,,,,,anonymous,EN,3.985,,,,,,,1536x864,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,no,no,no,no,no,yes,1,78,1,1,1,1,2019-08-12 02:47:24.599363,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-11 19:15:28.131669,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangle(self, rectangle: ""Rectangle"") -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> r = Rectangle(1,2)
        >>> rc.add_rectangle(r)
        [(1,2)]
        """"""
        self.rectagles.append(rectangle)
     def get_same_area_rects(self, area: int) -> List:
        same_area_rects = []
        for rectangle in self.rectangles:
            if get_area(self.rectangle) == area:
                same_area_rects.append(rectangle)
        return same_are_rects
                
        
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 50] expected an indented block (<string>, line 50)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1
186,2019-08-12 09:42:22,2019-08-11 22:58:02,0,,11,614,1,2019-08-10 18:01:12,R_zeX1qnb4WSvCPBv,,,,,,,anonymous,ZH-S,,8.435,,,Chrome,,Macintosh,1920x1080,,,,,,,,,,,,,,,,,1,,,68,yes,research,yes,yes,no,yes,yes,yes,yes,1,11,1,0,1,1,2019-08-12 16:24:07.280214,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-11 18:13:21.497699,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        lst = []
        for r in self.rectangles:
            if r.get_area() == area:
                lst.append(r)
        return lst



4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,"The first 3 methods are fairly trivial to code. But, if the 2nd one requires explanation, I would describe the solution as recognizing that we only need to make sure that the length of the value_list is less than it's size before appending the object. The last method compare can simply be split into if, elif and else statements as only those 3 cases exist when comparing the lengths of the value_list of self and other.",0,0,0,0,0,0,1,0,0,0,0,0,0,0,1
190,2019-08-11 17:55:49,2019-08-12 08:04:55,0,,100,627,0,2019-08-12 00:56:40,R_sbCs4rOl2RjoHst,,,,,,,anonymous,ZH-S,,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,research,yes,yes,no,yes,no,no,yes,1,0,0,0,1,1,2019-08-12 02:34:15.859640,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-09 16:51:49.597752,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangles(self, rec: Rectangle) -> None:
        self.rectangles.append(rec)
    
    def get_same_area_rects(self, num: int) -> List[Rectangle]:
        my_list = []
        for rectangle in self.rectangles:
            if get_area(rectangle) == num:
                my_list += [rectangle]
         return my_list
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",3.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 46] invalid syntax (<string>, line 46)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.125,,0,0,0,1,1,1,0,1,0,1,1,0,0,0,1
193,2019-08-11 10:18:31,2019-08-11 18:09:53,0,,11,42,1,2019-08-11 18:09:40,R_2rvXfGT5xZoJmol,,,,,,,anonymous,ZH-S,,,43.636,,,75.0.3770.144,,,,,,,,,,,,,,,,,,,1,,,68,yes,research,yes,yes,no,no,no,yes,yes,1,2221,0,0,1,1,2019-08-12 01:35:02.737153,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 03:08:33.417395,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    
    def add_rectangle(self) -> None:
        self.rectangles.append(self)
       
    def get_same_area_rects(area: int) -> lst:
        rec_list = []
        for i in len(range(self.rectangles));
            if self.rectangles[i].get_area == area:
                rec_list.append(self.rectangles[i])
        return rec_list
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E0104 (return-outside-function)  Number of occurrences: 1.<br />  &emsp;[Line 48] Return outside function<br /><br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 48] Undefined variable 'result'<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,1,0,1,1,1,1,0,0,0,0,0,0,1
196,2019-08-09 14:37:10,2019-08-12 08:32:13,0,,11,5302,0,2019-08-11 20:42:53,R_2qwm3gXhQLJ0zWH,,,,,,,anonymous,EN,4.608,16.812,,,Chrome,,,,,,,,,,,,,,,,,,,,1,,,68,yes,research,yes,yes,no,yes,yes,no,no,1,146,1,0,1,1,2019-08-13 00:50:07.159051,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,True,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,0,1,0,1,1,0,0,1,0,0,0,1
200,2019-08-17 14:10:00,2019-08-12 09:34:37,0,,100,1491,0,2019-08-08 21:59:21,R_1jq8HpQHZwvJc8l,,,,,,,anonymous,EN,,22.147,,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,research,yes,yes,no,yes,no,no,no,1,171,1,0,1,1,2019-08-14 19:08:33.326446,,Lecture,1,False,False,True,False,False,monokai,False,,,,2019-08-11 04:28:54.244658,,0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E1101 (no-member)  Number of occurrences: 4.<br />  &emsp;[Line 38] Instance of 'RectangleCollection' has no 'rectangles' member<br />&emsp;[Line 38] Instance of 'RectangleCollection' has no 'area' member<br />&emsp;[Line 39] Instance of 'RectangleCollection' has no 'rectangles' member<br />&emsp;[Line 39] Instance of 'RectangleCollection' has no 'area' member<br /><br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 39] Undefined variable 'number'<br /><br />=== Style/convention errors (fix: before submission) ===<br />E0101 (return-in-init)  Number of occurrences: 1.<br />  &emsp;[Line 32] Explicit return in __init__<br /><br />W0612 (unused-variable)  Number of occurrences: 1.<br />  &emsp;[Line 38] Unused variable 'a'<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.25,It is just logical no? I'm just wondering how it didn't work for one case.,0,0,0,1,1,1,0,1,0,0,0,0,0,0,1
208,2019-08-11 12:37:06,2019-08-08 18:11:37,0,,11,0,1,2019-08-12 08:40:18,R_2pLiURiGbZC17iG,,,,,,,anonymous,EN,1.782,,,,Chrome,76.0.3809.100,,1536x864,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,no,no,yes,no,no,no,1,70,1,0,1,1,2019-08-14 18:23:39.179779,,Lecture,1,False,False,True,False,False,monokai,False,,,Lecture,2019-08-12 03:32:42.149499,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangles(self, new_rect: List[int]) -> None:
        self.rectangles.append(new_rect)
        
    def get_same_area_rects(self, num: int) -> List[list]:
        new_list = []
        for rect in self.rectangles:
            if rect.get_are() == num:
                new_list.append(rect)
        return new_list
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0326 (bad-whitespace)  Number of occurrences: 3.<br />  &emsp;[Line 38] Exactly one space required around assignment<br />&emsp;[Line 42] Exactly one space required around assignment<br />&emsp;[Line 44] Exactly one space required around comparison<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,1,0,1,1,0,1,0,1,1,0,0,0,1
210,2019-08-12 07:29:06,2019-08-12 07:53:19,0,,100,592,1,2019-08-11 20:28:21,R_sHAtQHShKkTBFcd,,,,,,,anonymous,ZH-T,,10.213,13.078,,,,,,,,,,,,,,,,,,,,,,1,,,68,no,stop,no,no,no,yes,no,yes,yes,1,6988,1,1,1,1,2019-08-10 21:37:20.875210,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 02:23:26.944520,,0.0,False,67.0,,0.0,,0,0,0,0,1,0,1,0,0,1,0,0,0,0,1
211,2019-08-09 18:08:05,2019-08-09 10:41:26,0,,100,143,0,2019-08-12 13:44:52,R_3hts9egbfmIebnV,,,,,,,anonymous,EN,,,,,Edge,,,,,,,,,,,,,,,,,,,,6,Its harder to write an explanation for multistage questions in a vague question,,68,no,research,no,no,no,no,no,no,no,1,0,1,0,1,1,2019-08-15 03:19:15.204706,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:38:44.470967,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 43] invalid syntax (<string>, line 43)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,,0,1,1,0,1,0,1,0,0,0,1,0,0,0,1
213,2019-08-11 21:14:01,2019-08-11 22:53:18,0,,100,26,1,2019-08-12 04:36:36,R_1jv7beQ4hdHZO8r,,,,,,,anonymous,EN,,27.935,,,Chrome,,,,,,,,,,,,,,,,,,,,1,,,68,yes,stop,no,no,no,no,no,yes,yes,1,3912,1,0,1,1,2019-08-09 06:19:25.625853,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 07:49:44.457758,,8.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E0602 (undefined-variable)  Number of occurrences: 2.<br />  &emsp;[Line 42] Undefined variable 'r'<br />&emsp;[Line 45] Undefined variable 'n'<br /><br />E0601 (used-before-assignment)  Number of occurrences: 1.<br />  &emsp;[Line 45] Using variable 'list' before assignment<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0301 (line-too-long)  Number of occurrences: 1.<br />  &emsp;[Line 40] Line too long (268/80)<br /><br />W0621 (redefined-outer-name)  Number of occurrences: 1.<br />  &emsp;[Line 42] Redefining name 'Rectangle' from outer scope (line 3)<br /><br />W0622 (redefined-builtin)  Number of occurrences: 1.<br />  &emsp;[Line 46] Redefining built-in 'list'<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,0,1,1,0,1,0,1,0,0,0,0,1
220,2019-08-08 23:45:52,2019-08-12 09:33:43,0,,11,171,1,2019-08-12 02:48:34,R_3e7U8Au2A2CObIO,,,,,,,anonymous,EN,27.366,,,,,,Macintosh,,,,,,,,,,,,,,,,,,1,,,68,no,research,no,yes,no,no,yes,no,yes,1,8133,1,0,1,1,2019-08-10 02:52:40.129004,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 02:40:46.472949,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, rectangle: ""Rectangle"") -> None:
        self.rectangles.append(rectangle)
        
    def get_same_area_rects(self, area: int) -> List[""Rectangle""]:
        x = []
        for rec in self.rectangles:
            if get_area(rec) == area:
                x = x + [rec]
        return x
                
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,,1.0,,0,0,0,1,0,1,0,1,0,1,0,0,0,0,1
221,2019-08-11 18:32:39,2019-08-10 10:12:31,0,,11,0,0,2019-08-11 13:52:27,R_3Dot1MJZ376ADoL,,,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,stop,yes,no,no,no,yes,no,yes,1,42,1,0,1,1,2019-08-11 18:35:08.646003,,Lecture,1,False,False,True,False,False,eclipse,False,,,,2019-08-12 15:57:19.319125,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

def __init__(self):
    """""" (RectangleCollection) -> NoneType

    >>> rc = RectangleCollection()
    >>> rc.rectangles
    []
    """"""
    self.rectangles = []
    
def add_rectangle(self, rectangle):
    """"""appends rectangle as a parameter into rectangles list
    
    """"""
    self.rectangles.append(rectangle)
    
def get_same_area_rects(self, numb):
    """"""return a comprehensive list of all of the rectangles of same area
    
    """"""
    same_area_list = []
    for rectangle in self.rectangles:
        if rectangle == numb:
            same_area_list.append(rectangle)
    return same_area_list
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,,0.0,,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1
230,2019-08-09 10:43:14,2019-08-09 19:07:08,0,,11,422,0,2019-08-10 14:34:01,R_9TAGBdMwh27cFb3,,,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,research,no,yes,no,no,yes,yes,yes,1,109,1,0,1,1,2019-08-15 01:38:17.279170,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 03:46:53.829241,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles.append(rectangles)


     def get_same_area_recs(self, num: int) -> list[int]:
     
     same_area_list =[]
     for rectangle in self.rectangle:
         if rectangle == num:
             saem_area_list.append(rectangle)
     return same_area_list
                          
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />W0104 (pointless-statement)  Number of occurrences: 1.<br />  &emsp;[Line 48] Statement seems to have no effect<br /><br />=== Style/convention errors (fix: before submission) ===<br />E0213 (no-self-argument)  Number of occurrences: 1.<br />  &emsp;[Line 45] Method should have ""self"" as first argument",0.0,,66,0,0,0,0,0,0,0,0,0,1,0,0,0,1
231,2019-08-11 13:20:44,2019-08-11 22:20:39,0,,100,960,0,2019-08-09 13:02:48,R_3RwjRCcmFPYNKF9,,,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,no,stop,no,yes,no,yes,yes,yes,no,1,49,1,0,1,1,2019-08-14 00:46:48.268468,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-14 18:53:07.023349,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
            self.rectangles = []
    
        def add_rectangle(self, rectangle):
            """"""appends rectangle as a parameter into rectangles list
            
            """"""
            self.rectangles.append(rectangle)
    
        def get_same_area_rects(self, numb):
            """"""return a comprehensive list of all of the rectangles of same area
            
            """"""
            same_area_list = []
            for rectangle in self.rectangles:
                if rectangle == numb:
                    same_area_list.append(rectangle)
            return same_area_list
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,1.0,Looked at the docstrings and constructed my functions,0,0,1,0,0,0,0,1,0,1,1,0,0,0,1
232,2019-08-11 20:55:14,2019-08-10 21:40:31,0,,11,2128,0,2019-08-09 16:05:21,R_3oBEQM3zMfHBCkm,,,,,,,anonymous,EN,,,,,,,,1280x800,,,,,,,,,,,,,,,,,1,,,68,yes,research,yes,no,no,no,yes,yes,no,1,600,0,0,1,1,2019-08-13 21:51:35.538245,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-10 20:53:20.004125,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles=[]
       def add_rectangle(self, rec: ""Rectangle"") -> None:
        self.rectangles.append(rec)
    def get_same_area_rects (self, num: int) -> list[""Rectangle""]:
        res = []
        for i in self.rectangles:
            if i.get_area() == num:
                res.append(i)
        return res
                
     
        
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0326 (bad-whitespace)  Number of occurrences: 3.<br />  &emsp;[Line 40] Exactly one space required after :<br />&emsp;[Line 43] Exactly one space required after :<br />&emsp;[Line 44] Exactly one space required around assignment<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,1,0,1,0,1,0,1,0,0,0,0,1
235,2019-08-11 20:17:42,2019-08-11 20:31:02,0,,100,1,0,2019-08-12 10:44:05,R_3Oidqg0lG4Xr1yL,,,,,,,anonymous,EN,,,,4,,,Windows NT 10.0,,,,,,,,,,,,,,,,,,1,,,68,yes,no,yes,yes,no,no,no,yes,no,1,1,1,0,1,1,2019-08-11 06:30:22.889413,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-09 21:17:38.503782,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles.append(rectangle)
        
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 60] expected an indented block (<string>, line 60)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,,0,0,0,0,1,1,1,1,0,1,0,0,0,0,1
238,2019-08-12 08:36:36,2019-08-11 21:53:11,0,,11,30,1,2019-08-11 23:28:59,R_2thPDpxGaL5VeSW,,,,,,,anonymous,EN,4.003,367.015,,,,,,1280x720,,,,,,,,,,,,,,,,,1,,,68,yes,research,no,yes,no,no,no,yes,yes,1,219,1,0,1,1,2019-08-12 15:29:02.789507,,Lecture,1,False,False,True,False,False,monokai,False,,,Lecture,,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",8.0,False,67.0,,0.0,"try to submit and check the answer point
",0,0,1,0,0,0,1,0,0,0,0,0,0,0,1
240,2019-08-10 15:32:30,2019-08-12 09:23:17,0,,11,0,1,2019-08-08 22:12:03,R_20MPd3gL78KrzI9,,,,,,,anonymous,ZH-S,,,,,,,Windows NT 6.3,,,,,,,,,,,,,,,,,,1,,,68,yes,research,yes,no,no,yes,no,yes,yes,1,442,1,0,1,1,2019-08-12 04:17:31.153061,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-06 18:16:46.909307,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",8.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,1,0,0,1,1,0,1,0,0,0,0,1
260,2019-08-11 21:59:07,2019-08-11 23:33:44,0,,11,1,0,2019-08-11 18:41:51,R_2wN6wh9QF6sWb96,,,,,,,anonymous,ZH-S,,,23.595,,,,,,,,,,,,,,,,,,,,,,1,,,68,no,no,no,yes,no,no,no,yes,no,1,178,1,0,1,1,2019-08-12 05:42:09.635922,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-10 18:51:40.687315,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, rectangle) -> None:
        self.rectangles.append(rectangle)
    def get_same_area_rects(self, number) -> List:
        acc = []
        for n in self.rectangles:
            if n.get_area() == number:
                acc.append(n)
        return acc
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",,False,67.0,,0.0,,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1
272,2019-08-12 07:38:08,2019-08-10 23:58:05,0,,11,107,0,2019-08-12 13:58:41,R_xGzNBnpahgCHPyh,,,,,,,anonymous,ZH-T,,,,,,,Windows NT 10.0,,,,,,,,,,,,,,,,,,1,,,68,yes,research,no,no,no,yes,yes,yes,yes,1,0,1,1,1,1,2019-08-10 20:20:32.150146,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:26:20.893810,,0.0,,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 46] Undefined variable 'lists'<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0326 (bad-whitespace)  Number of occurrences: 2.<br />  &emsp;[Line 39] No space allowed around keyword argument assignment<br />&emsp;[Line 41] Exactly one space required after :<br /><br />W0622 (redefined-builtin)  Number of occurrences: 1.<br />  &emsp;[Line 42] Redefining built-in 'list'<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,thoughts,0,0,0,0,0,1,1,0,0,1,0,0,0,0,1
277,2019-08-08 15:47:41,2019-08-11 22:32:25,0,,100,1,0,2019-08-08 23:42:52,R_xctiI9ctFpu6M5r,,,,,,,anonymous,ZH-S,,,,,Chrome,,,,,,,,,,,,,,,,,,,,1,,,68,no,no,yes,yes,no,yes,yes,yes,yes,1,99,1,0,1,1,2019-08-12 05:00:34.928858,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-11 23:29:42.445226,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    
    def add_rectangle(self, rectangle):
        """"""appends rectangle as a parameter into rectangles list
    
        """"""
    self.rectangles.append(rectangle)
    
    def get_same_area_rects(self, numb):
        """"""return a comprehensive list of all of the rectangles of same area
    
        """"""
    same_area_list = []
    for rectangle in self.rectangles:
        if rectangle == numb:
            same_area_list.append(rectangle)
    return same_area_list    
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!,0.0,,46,0,1,0,0,0,1,1,0,1,0,0,0,0,1
278,2019-08-11 19:35:16,2019-08-11 22:18:38,0,,11,645,0,2019-08-12 02:20:45,R_1FQ84XQ8MXD7EK2,,,,,,,anonymous,EN,,,25.835,,,,Macintosh,1680x1050,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,no,no,yes,yes,yes,yes,1,686,1,0,1,1,2019-08-12 04:32:09.370657,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 04:17:27.647185,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.375,,0,0,0,1,0,1,0,0,0,1,0,0,0,0,1
284,2019-08-12 00:36:10,2019-08-11 20:52:48,0,,100,1982,0,2019-08-12 01:06:38,R_cZRhijZTGAefTeV,,,,,,,anonymous,ZH-S,,23.796,,1,,76.0.3809.100,Windows NT 10.0,,,,,It is just logical no? I'm just wondering how it didn't work for one case.,,,,,,,,,,,,,1,,,68,yes,no,yes,yes,no,no,yes,no,no,1,2346,1,1,1,1,2019-08-13 18:55:02.994090,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 14:52:34.348794,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
   
        
    def add_rectangle(self, rec: 'Rectangle') -> None:
        self.rectangles.append(rec)
        
    def get_same_area_rects(self, area: int) -> List('Rectangle'):
        L = []
        if area == self.get_area():
            L.append(self)
        return L
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 41] unexpected indent (<string>, line 41)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,,0,0,0,1,0,1,1,1,0,1,1,0,0,0,1
292,2019-08-12 09:31:47,2019-08-12 07:44:33,0,,11,178,0,2019-08-11 19:18:58,R_9nmGS9F2oC0GepH,,,,,,,anonymous,EN,,59.939,,,,,Macintosh,,,,,,,,,,,,,,,,,,1,,,68,no,no,no,yes,no,yes,no,no,yes,1,857,1,0,0,1,2019-08-12 01:12:32.189074,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 04:17:12.155231,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",4.0,False,,"Statement node Module.tmpa0_hxhl8(name='tmpa0_hxhl8',
                   doc=None,
                   file='/data/pcrs/instance/csc108-2019-05/pcrs/languages/python/execution/temporary/tmpa0_hxhl8.py',
                   path='/data/pcrs/instance/csc108-2019-05/pcrs/languages/python/execution/temporary/tmpa0_hxhl8.py',
                   package=False,
                   pure_python=True,
                   future_imports=set(),
                   body=[]) doesn't have start attributes set.",0.0,,50,0,0,1,0,0,0,1,0,1,0,0,0,0,1
293,2019-08-10 14:25:24,2019-08-08 17:59:06,0,,11,1,1,2019-08-11 23:56:02,R_9sH1PVbsHuTyqvn,,,,,,,anonymous,EN,,,,,,74.0.3729.169,,1280x720,,,,,,,,,,,,,,,,,1,,,68,yes,no,yes,yes,no,no,no,no,no,1,90,0,1,1,1,2019-08-12 14:25:59.668918,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-09 20:44:34.120590,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
    def __init__(self):
        self.rectangles=[]
    def add_rectangle(self,rect):
        self.rectangles.append(rect)
    def get_same_area_rects(self,area):
        rects=[]
        for rect in self.rectangles:
            if area==rect.get_area():
                rects.append(rect)
        return rects
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 52] expected an indented block (<string>, line 52)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1
295,2019-08-11 20:34:37,2019-08-12 12:08:15,0,,11,375,0,2019-08-10 16:52:38,R_29uWS19etIAHWqt,,,,,,,anonymous,EN,,,,3,,,,1920x1080,,,,,,,,,,,,,,,,,1,,,68,no,research,no,no,no,yes,no,yes,no,1,290,1,0,1,1,2019-08-13 15:08:23.874469,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 05:01:39.247750,,,False,67.0,,0.0,"initialize the values, then treat the rest like functions where the initialized things are constants",0,0,1,1,0,1,0,0,0,1,0,0,0,0,1
296,2019-08-11 10:54:52,2019-08-11 12:59:34,0,,11,7863,1,2019-08-12 12:28:07,R_1gH2FTkNhzr8lH8,,,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,no,stop,yes,yes,no,no,no,no,no,1,100,0,1,1,1,2019-08-11 13:43:03.697461,,Lecture,1,False,False,True,False,False,eclipse,False,,,,2019-08-12 02:14:23.729650,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangle(self,rect):
        self.rectangles.append(rect)
    def get_same_area_rects(self,area):
        rects = []
        for rect in self.rectangles:
            if area == rect.get_area():
                rects.append(rect)
        return rects
        
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,,list index out of range,0.0,,0,0,1,0,0,1,0,1,0,1,1,0,0,0,1
297,2019-08-11 21:53:23,2019-08-11 19:03:39,0,,11,1778,0,2019-08-11 23:45:57,R_Pv2YioKlVSitYlz,,,,,,,anonymous,EN,,,,,,,,1280x800,,,,,,,,,,,,,,,,,1,,,68,yes,research,no,yes,no,yes,yes,no,yes,1,904,1,0,1,1,2019-08-12 11:27:23.830585,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangle(self, adr: Rectangle) -> None:
        self.rectangles.append(adr)
    def get_same_area_rects(self, samearea: int) -> list:
        lst = []
        for adr in self.rectangles:
            if adr.get_area() == samearea:
                lst.append(adr)
        return lst
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,maximum recursion depth exceeded,0.0,,0,0,0,0,0,0,1,1,0,0,1,0,0,0,1
298,2019-08-09 11:48:12,2019-08-11 20:34:38,0,,11,1410,0,2019-08-10 18:54:26,R_3rIdkn8QmVvEjNq,,,,,,,anonymous,EN,,,,,,75.0.3770.142,,,,,,,,,,,,,,,,,,,1,,,68,yes,stop,yes,yes,no,yes,no,yes,no,1,2616,1,1,1,1,2019-08-11 23:30:35.426076,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-09 22:32:04.455342,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, r: Rectangle) -> None:
        self.rectangles.append(r)
    
    def get_same_area_rects(self, area) -> list:
        area_list = []
        for r in self.rectangles:
            if r.get_area() == area:
                area_list.append(r)
        
        return area_list
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!,0.5,,71,0,0,0,1,1,1,0,0,1,0,0,0,0,1
299,2019-08-10 23:55:52,2019-08-11 19:18:35,0,,11,1066,0,2019-08-12 13:34:47,R_3oFtMRzZbsrqRbc,,,,,,,anonymous,ZH-S,,,,2,,,Macintosh,,,,,,,,,,,,,,,,,,1,,,68,yes,research,yes,yes,no,no,yes,no,yes,1,13,1,0,1,1,2019-08-14 20:57:39.236327,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 13:46:52.924248,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
       def add_rectangle(self, rectangle: int) -> List[int]:
        """""" append rectangle to list""""""
        self.rectangle = Rectangle.get_area(self, w, h)
        self.rectangles.append(rectangle)
        
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",4.0,True,67.0,,0.0,,0,0,1,0,1,1,1,1,0,1,1,0,0,0,1
305,2019-08-12 08:25:02,2019-08-11 20:03:04,0,,11,1063,0,2019-08-11 22:13:37,R_098vaoYc1f2oWUF,,,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,yes,no,yes,yes,yes,no,1,2291,1,0,1,1,2019-08-11 16:35:24.604535,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-09 02:10:23.009842,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, new: ""Rectangle"") -> None:
        self.rectangles.append(new)
        
    def get_same_rects(self, area: int) -> List[""Rectangle""]:
        area_rectangles = []
        for rectangle in self.rectangles:
            if rectangle.get_area == area:
                area_rectangles.append(rectangle)
                
        return area_rectangles        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 46] invalid syntax (<string>, line 46)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,,0,1,0,1,1,1,1,0,0,1,0,0,0,0,1
306,2019-08-12 09:19:26,2019-08-12 09:58:14,0,,100,1387,0,2019-08-12 02:42:42,R_2bTxbOOnRe9TJDb,,,,,,,anonymous,EN,8.435,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,yes,no,yes,no,no,yes,1,1,0,0,1,1,2019-08-12 14:08:12.876484,,Lecture,1,False,False,True,False,False,eclipse,False,,,,2019-08-12 04:33:54.423642,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:
    
    def __init__(self) -> None:
        """"""
        """"""
        self.lsst = []


    def add_rectangle(self, Rectangle) -> None:
        """"""

        """"""
        self.lsst.append(Rectangle)
        
        def get_same_area_rects(self, num: int) -> list:
        """"""
        """"""
        area_list = []
        for rec in self.lsst:
            if rec.get_area() == num:
                area_list.append(rec)

        return area_list
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",3.0,False,67.0,,0.0,,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1
308,2019-08-10 23:21:00,2019-08-12 01:05:38,0,,11,4689,0,2019-08-12 13:23:26,R_byHTMMoFB7MF8vD,,,,,,,anonymous,ZH-S,,,1632.45,,Chrome,,Windows NT 10.0,,,,,,,,,,,,,,,,,,4,,,68,no,no,yes,no,no,yes,no,no,yes,1,650,1,0,1,1,2019-08-13 13:50:09.495728,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 01:42:02.612170,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles=[]
    def add_rectangle(self,rect):
        self.rectangles.append(rect)
    def get_same_area_rects(self,area):
        rects=[]
        for rect in self.rectangles:
            if area==rect.get_area():
                rects.append(rect)
        return rects
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",1.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E0601 (used-before-assignment)  Number of occurrences: 1.<br />  &emsp;[Line 43] Using variable 'list' before assignment<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0112 (empty-docstring)  Number of occurrences: 2.<br />  &emsp;[Line 39] Empty method docstring<br />&emsp;[Line 43] Empty method docstring<br /><br />W0621 (redefined-outer-name)  Number of occurrences: 1.<br />  &emsp;[Line 39] Redefining name 'Rectangle' from outer scope (line 3)<br /><br />W0622 (redefined-builtin)  Number of occurrences: 1.<br />  &emsp;[Line 46] Redefining built-in 'list'<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,0,1,0,1,1,0,1,0,0,0,0,1
309,2019-08-11 18:41:13,2019-08-09 15:58:29,0,,11,1348,0,2019-08-12 01:20:37,R_3KZymeOK8wkdEqc,,,,,,,anonymous,EN,,,,6,,,,,,,,,,,,,,,,,,,,,1,,,68,no,no,no,no,no,yes,yes,yes,no,1,1,1,0,1,1,2019-08-12 13:25:23.126570,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 13:16:17.997332,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        a = self.rectangles.extend(self.area())
        if number == self.rectangles.extend(self.area()):
            return True
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />W0101 (unreachable)  Number of occurrences: 1.<br />  &emsp;[Line 46] Unreachable code<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0326 (bad-whitespace)  Number of occurrences: 5.<br />  &emsp;[Line 33] Exactly one space required around assignment<br />&emsp;[Line 34] Exactly one space required after comma<br />&emsp;[Line 36] Exactly one space required after comma<br />&emsp;[Line 37] Exactly one space required around assignment<br />&emsp;[Line 39] Exactly one space required around comparison<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,1,0,1,1,0,1,0,0,1,0,0,0,1
310,2019-08-09 01:16:21,2019-08-08 23:42:52,0,,100,0,0,2019-08-08 20:31:45,R_ugr3xzyXhtLVkQN,,,,,,,anonymous,EN,,,79.172,1,Edge,,,,,,,,,,,,,,,,,,,,4,,,68,yes,stop,no,no,no,no,no,no,no,1,1673,1,0,1,1,2019-08-12 13:06:34.442541,,Lecture,1,False,False,True,False,False,eclipse,False,,,,2019-08-12 15:44:07.640703,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        same_area_list = []
        for rectangle in self.rectangles:
            if rectangle == numb:
                same_area_list.append(rectangle)
        return same_area_list
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",3.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />E9990 (assigning-to-self)  Number of occurrences: 1.<br />  &emsp;[Line 38] Assigning value to self on line 38<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,1,0,1,1,0,0,1,0,0,0,0,1
312,2019-08-12 09:56:51,2019-08-11 21:06:31,0,,11,2231,0,2019-08-12 12:08:15,R_5vBmLgSBGpofbX3,,,,,,,anonymous,EN,,,,,,,Windows NT 10.0,,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,yes,no,no,no,no,no,1,0,1,0,1,1,2019-08-14 16:44:34.574540,,Lecture,1,False,False,True,False,False,eclipse,False,,,,2019-08-09 19:41:35.351056,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles=[]
    def add_rectangle(self, rectangle)->None:
        self.rectangles.append(rectangle)
    def get_same_area_rects(self, area)->list:
        re=[]
        for i in self.rectangles:
            if area==i.get_area():
                re.append(i)
        return re
                
                
        
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.75,,0,0,0,1,0,1,0,0,0,0,1,0,0,0,1
315,2019-08-12 09:23:16,2019-08-12 09:44:21,0,,11,50,1,2019-08-08 16:50:14,R_1pXrvlg3AO9sxOT,,,,,,,anonymous,EN,,17.073,176.346,,,76.0.3809.100,Windows NT 10.0,1440x900,,,,,,,,,,,,,,,,,1,,,68,yes,no,yes,no,no,yes,no,yes,yes,1,8,1,0,1,1,2019-08-14 18:08:20.041179,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 01:49:34.350451,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",8.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.25,,0,0,1,0,1,0,1,1,0,0,0,0,0,0,1
316,2019-08-12 09:28:48,2019-08-09 15:21:14,0,,100,2125,0,2019-08-12 00:52:54,R_1DSGnqbf06JB9qx,,,,,,,anonymous,DE,,,81.834,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,research,yes,no,no,yes,yes,no,yes,1,40,1,0,1,1,2019-08-14 22:05:10.529758,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 03:09:08.609414,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h
        
        self.rectangles = []


    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
        same_area_list = []
        for rectangle in self.rectangles:
            if rectangle == numb:
            same_area_list.append(rectangle)
        return same_area_list
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0326 (bad-whitespace)  Number of occurrences: 2.<br />  &emsp;[Line 39] Exactly one space required after comma<br />&emsp;[Line 41] Exactly one space required after comma<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,1,0,0,1,0,1,1,0,1,0,0,0,0,1
317,2019-08-11 20:36:00,2019-08-12 07:31:35,0,,11,1247,0,2019-08-09 20:43:07,R_ZmbwMAoc10awIV3,,,,,,,anonymous,EN,,47.409,39.711,,,,,,,,,,,,,,,,,,,,,,1,,,68,no,research,no,yes,no,no,yes,yes,no,1,6697,1,0,1,1,2019-08-14 19:51:36.629987,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-09 18:04:50.708110,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles=[]
        
       def add_rectangle(self, rectangle:str)->None:
            """"""Append rectangle to the list.
            """"'
        self.rectangles.append(rectangle)
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 39] invalid syntax (<string>, line 39)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1
318,2019-08-11 13:57:23,2019-08-12 05:11:51,0,,11,1505,0,2019-08-12 13:33:46,R_27D32PXZyz5R3uv,,,,,,,anonymous,EN,1631.022,,368.653,,,,,,,,,,,,,,,,,,,,,,1,,,68,no,stop,no,no,no,no,yes,yes,yes,1,0,1,0,1,1,2019-08-14 22:14:23.696622,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-10 00:24:46.059408,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    
    def add_rectangle(self, Rectangle) -> None:
        self.rectangles.append(Rectangle)
        
    def get_same_area_rects(self, area: int) -> List:
        same_area_rects = []
        for Rectangle in self.rectangles:
            if get_area(Rectangle) == area:
                same_area_rects.append(Rectangle)
        return same_area_rects
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",,,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,"I logically thought it through, using materials learnt in lectures",0,0,0,0,1,0,1,1,0,0,0,0,0,0,1
319,2019-08-10 11:56:33,2019-08-12 09:31:49,0,,11,686,0,2019-08-12 07:31:35,R_574Eadtb0YgxdxT,,,,,,,anonymous,EN,,,9.701,1,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,no,no,no,yes,yes,yes,1,64,1,0,1,1,2019-08-12 15:31:44.885113,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-11 16:27:19.983064,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangle(self, Rectangle: int)-> None:
        """"""
        """"""
        self.rectangles.append(Rectangle)
    def get_same_area_rects(self, number: int) -> list:
        """"""
        """"""
        list = []
        for area in self.rectangles:
            if area == number:
                list = list + area
        return list        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,1.0,,0,0,0,1,1,1,0,1,0,0,1,0,0,0,1
320,2019-08-11 21:10:25,2019-08-11 22:42:27,0,,11,0,0,2019-08-09 17:54:30,R_pAg4cAgvDIbZDy1,,,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,stop,yes,yes,no,yes,no,no,no,1,158,0,0,1,1,2019-08-12 01:44:56.753985,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 46] invalid syntax (<string>, line 46)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1
321,2019-08-12 07:13:36,2019-08-11 18:16:40,0,,11,2221,1,2019-08-12 13:16:20,R_eX5zbPyRViCnC6J,,,,,,,anonymous,EN,12.859,,5.973,,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,research,yes,no,no,no,no,no,no,1,454,0,0,1,1,2019-08-12 04:47:17.514782,,Lecture,1,False,False,True,False,False,shaped ,False,,,Lecture,2019-08-12 06:27:08.896118,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
     def add_rectangle(self, rectangle: Rectangle)
        """"""Add rectangle to the list of rectangles.
        
        >>> r = RectangleCollection()
        >>> r.add_rectangle(Rectangle(10, 20))
        """"""
        self.rectangles.append(rectangle)
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",8.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,1.0,,0,0,0,0,1,1,0,1,0,1,1,0,0,0,1
322,2019-08-11 20:52:47,2019-08-08 23:48:15,0,,11,133,0,2019-08-10 10:12:32,R_1hAsD8tb1sieo24,,,,,,,anonymous,EN,,142.039,,4,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,yes,yes,no,no,yes,yes,no,1,37,1,1,1,1,2019-08-14 23:56:17.530630,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles=[]
    def add_rectangle(self,rect):
        self.rectangles.append(rect)
    def get_same_area_rects(self,area):
        rects=[]
        for rect in self.rectangles:
            if area==rect.get_area():
                rects.append(rect)
        return rects
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E1101 (no-member)  Number of occurrences: 1.<br />  &emsp;[Line 38] Instance of 'RectangleCollection' has no 'rectangles' member<br /><br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 38] Undefined variable 'rectangle'<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,1.0,,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1
333,2019-08-12 07:47:27,2019-08-10 16:54:46,0,,11,1760,0,2019-08-09 20:43:40,R_qWTCUjLWKYyjOcF,,,,,,,anonymous,EN,16.812,,11.549,,,,,,,,,,,,,,,,,,,,,,4,,,68,no,stop,no,yes,no,no,yes,yes,no,1,361,1,0,1,1,2019-08-08 23:50:17.783677,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-10 18:28:55.414149,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
        self.rectangles = []
    
    def add_rectangle(self, rectangle: Rectangle) -> None:
        """"""Append rectangle to the rectangles list.
        """"""
        self.rectangles.append(rectangle)
        
    def get_same_area_rects(self, num: int) -> List:
        """"""Return a list of rectangles that have the same area as num.
        """"""
        same = 0
        for i in self.rectangles:
            if self.rectangles[i].get_area() = num:
                same += 1
        
        return same
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!,0.0,,0,1,0,1,1,0,0,0,0,1,1,0,0,0,1
336,2019-08-10 21:05:05,2019-08-11 15:27:29,0,,11,2427,0,2019-08-12 13:32:17,R_28ZKTyV7gU8yUfA,,,,,,,anonymous,ZH-S,,,,,,75.0.3770.142,,,,,,,,,,,,,,,,,,,5,,,68,yes,research,yes,no,no,yes,yes,yes,no,1,29,1,0,1,1,2019-08-14 22:05:09.139252,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-11 15:44:09.886003,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """""" Create a rectangle collection
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        return self.rectangles
    
    def add_rectangle(self, r: Rectangle) -> None:
        """"""
        >>> rc = RectangleCollection
        >>> r = Rectangle(1, 2)
        >>> rc.add_rectangle(r)
        >>> rc.rectangles
        [Rectangle(1, 2)]
        """"""
        self.rectangles.append(r)
        return self.rectangles
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.25,,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1
340,2019-08-12 08:35:27,2019-08-12 09:16:18,0,,11,966,1,2019-08-12 00:00:55,R_OdN44yaJwmDmbYJ,,,,,,,anonymous,ZH-S,,77.989,,,,,,,,,,,,thoughts,,,,,,,,,,,1,,,68,no,research,yes,yes,no,no,yes,yes,no,1,7863,1,0,1,1,2019-08-13 23:08:42.418001,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 02:03:32.902215,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
        self.rectangles = []
    
    def add_rectangle(self, rect: Rectangle) -> None:
        
        self.rectangles.append(rect)
    
    def get_same_area_rects(self, area: int) -> List[Rectangle]:
        
        result = []
        for rect in self.rectangles:
            if rect.get_area() == area:
            result.append(rect)
        
        return result
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",,True,,,0.0,,0,0,0,1,1,0,0,0,0,1,0,0,0,0,1
343,2019-08-11 18:07:57,2019-08-09 17:54:30,0,,100,0,0,2019-08-12 13:33:51,R_3qjNZSEW9rWWXMM,,,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,no,stop,yes,yes,no,no,no,no,yes,1,1,1,0,1,1,2019-08-12 03:41:42.370781,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 01:45:47.684329,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, rect) -> object:
        """"""
        """"""
        
        
        self.rectangles.append(rect)
        
    def get_same_area_rects(self,area) -> object :
        """"""
        """"""
        
        rects=[]
        for rect in self.rectangles:
            if area==rect.get_area():
                rects.append(rect)
        return rects
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,1,0,1,1,1,0,1,0,0,0,0,1
344,2019-08-12 03:53:18,2019-08-12 08:55:26,0,,11,2362,0,2019-08-09 01:11:17,R_2Pcy5CpIiGPaSo8,,,,,,,anonymous,EN,,,,,,75.0.3770.142,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,no,yes,no,no,no,yes,no,1,434,1,1,1,1,2019-08-14 13:45:54.690191,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-11 14:05:35.776677,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangle(self, new_rectangle: ""Rectangle"") -> None:
        self.rectangles.append(new_rectangle)
    def get_same_area_rects(self, number: int) -> List[Rectangle]:
        rectangles_with_same_area = []
        for rectangle in self.rectangles:
            if Rectangle.get_area(rectangle) == number:
                rectangles_with_same_area.append(rectangle)
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!,0.0,,0,0,0,1,0,1,1,0,0,0,1,0,0,0,1
345,2019-08-11 15:53:13,2019-08-12 07:57:29,0,,11,1401,0,2019-08-10 16:07:43,R_SBjKGXuWPP8iO9r,,,,,,,anonymous,EN,,,,2,,,Macintosh,,,,,,,,,,,,,,,,,,1,,,68,no,research,yes,no,no,no,no,no,no,1,26,1,0,1,1,2019-08-12 02:36:00.901241,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 01:36:27.370063,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""
        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
       self.rectangles = []

       self.rectangles.append(r)

 
       lst = []
       for r in self.rectangles:
           if r.get_area() == area:
               lst.append(r)
       return lst
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",8.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0621 (redefined-outer-name)  Number of occurrences: 1.<br />  &emsp;[Line 39] Redefining name 'Rectangle' from outer scope (line 3)<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1
346,2019-08-12 07:57:00,2019-08-11 20:36:58,0,,11,37,0,2019-08-12 13:41:24,R_3fwp6UhcXFOezyP,,,,,,,anonymous,EN,10.213,,,,Chrome,,,1280x800,,,,,,,,,,,,,,,,,1,,,68,yes,no,yes,yes,no,no,no,yes,no,1,1,1,1,1,1,2019-08-12 15:16:32.058138,,Lecture,1,False,False,True,False,False,eclipse,False,,,,2019-08-12 00:13:02.462397,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, rectangle: Rectangle) -> None: 
        self.rectangles.append(rectangle)
        
    def get_same_area_rects(self, area) -> List[Rectangle]:
        rects = []
        for r in self.rectangles: 
            if r.get_area() == area: 
                rects.append(r)
        return rects 
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,,0.0,,0,0,1,0,0,1,0,1,0,1,1,0,0,0,1
347,2019-08-11 23:23:44,2019-08-11 19:18:58,0,,11,49,0,2019-08-12 13:56:59,R_u1Wgv7nK373dylr,,,,,,,anonymous,EN,,,,,Chrome,,,,,,,,,,,,,,,,,,,,6,,,68,yes,research,yes,yes,no,yes,yes,no,yes,1,724,0,0,1,1,2019-08-10 17:43:00.510204,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 13:46:32.026892,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self_rectangles = []
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",8.0,,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0612 (unused-variable)  Number of occurrences: 1.<br />  &emsp;[Line 38] Unused variable 'self_rectangles'<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,421,0,0,1,0,1,0,1,0,1,1,0,0,0,1
348,2019-08-11 23:04:33,2019-08-14 13:08:06,0,,11,4394,0,2019-08-12 02:33:20,R_3e916Y7Gsg1uNFL,,,,,,,anonymous,ZH-S,,,19.452,1,,,,,,,,,,,,,,,,,,,,,1,,,68,no,stop,yes,no,no,no,yes,yes,no,1,575,1,0,1,1,2019-08-15 00:35:17.885973,,Lecture,1,False,False,True,False,False,eclipse,False,,,,2019-08-11 23:50:59.913751,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = [] 
        
    def add_rectangle(self, r: Rectangle) -> List[Rectangle]:
        """"""Return a list of Rectangle.
        >>> r = Rectangle(10, 20)
        >>> rc = RectangleCollection()
        >>> rc.add_rectangle(r)
        >>> rc.rectangles
        [Rectangle(10, 20)]
        """"""
        self.rectangles.append(r)
        
    def get_same_area_rects(self, area: int) -> List[Rectangle]:
        """"""Return a list of Rectangle have the <area>.
        >>> rc = RectangleCollection()
        >>> r = Rectangle(10, 20)
        >>> rc.add_rectangle(r)
        >>> rc.get_same_area_rects(200)
        [Rectangle(10, 20)]
        """"""
        r = []
        for i in self.rectangles:
            if i.get_area() == area:
                r.append(i)
        return r
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!,0.0,,0,0,1,0,0,1,0,0,0,1,1,0,0,0,1
349,2019-08-11 19:13:53,2019-08-11 20:36:21,0,,11,2616,0,2019-08-12 13:53:21,R_3hopMX37JQ8csPx,,,,,,,anonymous,ZH-T,,67.765,,1,,,,,,,,,,,,,,,,,,,,,4,,,68,yes,stop,yes,no,no,no,no,yes,yes,1,512,1,0,1,1,2019-08-09 01:01:55.004304,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 04:50:54.594764,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
        self.rectangles = []
   
        
    def get_same_area_rects(self, num: float) -> List[Rectangle]:
        """"""Return a list of all of the rectangles found in the rectangle collection that have an area             equal to num.

        >>> r = Rectangle(10, 20)
        >>> w = Rectangle(10, 10)
        >>> p.rectangles
        [r, w]
        >>> r.get_same_area_rects(200)
        [r]
        """"""
        
        same_area = []
        for rectangle in self.rectangles:
            if rectangle.get_area() == num:
                same_area.append(rectangle)
        return same_area
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,,,,0.0,"It made the most sense, it does what is asked.",0,0,0,0,0,0,1,1,0,1,0,0,0,0,1
351,2019-08-12 07:47:11,2019-08-11 01:36:33,0,,11,1107,0,2019-08-11 13:34:19,R_1QEK9ONOZKYv2BL,,,,,,,anonymous,EN,,,,,Chrome,75.0.3770.142,,,,,,,,,,,,,,,,,,,1,,,68,yes,stop,no,no,no,yes,no,yes,no,1,1438,1,0,1,1,2019-08-12 02:07:08.465114,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 07:40:46.707121,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []

    def add_rectangle(self, rec: ""Rectangle"") -> None:
        self.rectangles.append(rec)
        
    def get_same_area_rects(self, area: int) -> List:
        rectang_area = []
        for rectang in self.rectangles:
            if rectang.get_area == area:
                rectang_area.append(rectang)
        return rectang_area
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",8.0,False,67.0,,0.0,,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1
353,2019-08-12 00:55:50,2019-08-11 21:19:45,0,,100,0,0,2019-08-12 09:33:59,R_3EfBNn3v7LhyAG6,,,,,,,anonymous,EN,25.23,,,,,,,,,,,,,,,,,,,,I thought we could use len(),,,,7,,,68,yes,no,no,yes,no,no,yes,no,no,1,1387,1,1,1,1,2019-08-12 06:06:22.921943,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:21:43.552206,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
        self.rectangles = []
    
    def add_rectangle(self) -> None:
        """"""
        """"""
        self.rectangles.append(rectangle)
    
    def get_same_area_rects -> List[int]:
        """"""
        """"""
     
        same_area_list = []
        
        for rectangle in self.rectangles:
            if rectangle == numb:
                same_area_list.append(rectangle)
        return same_area_list
        

        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,,0.0,"First I will read the return type, and then I read the description and examples and try to figure out my answer.",41,1,1,0,1,0,0,1,0,1,1,0,0,0,1
354,2019-08-08 17:54:06,2019-08-10 18:01:12,0,,11,25,0,2019-08-12 13:58:16,R_1fZ9SPj5cPKkobI,,,,,,,anonymous,EN,,,,5,,,Macintosh,,,,,,,,,,,,,,,,,,1,,,68,no,research,yes,no,no,no,yes,no,yes,1,1410,1,0,1,1,2019-08-12 14:06:51.171268,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-10 18:40:45.039990,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
        self.rectangles = []
        
     def add_rectangle(self, other: 'Rectangle') -> None:
            """"""""""""
        self.rectangles.append(other)
        
     def get_same_area(self, num: float) -> list:
        """"""""""""
        lst = []
        for rectangle in self.rectangles:
            if get_area(rectangle) == num:
                lst.append(rectangle)
        return lst
                
            
        
       
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",8.0,False,67.0,,0.0,,0,0,0,0,0,1,1,1,0,1,1,0,0,0,1
356,2019-08-08 16:48:26,2019-08-11 19:36:46,0,,11,10,0,2019-08-09 19:58:35,R_3Mgv5YHHRnc2duP,,,,,,,anonymous,EN,,,,,,,Macintosh,,,,,,,,,,,,,,,,,,1,,,68,no,research,yes,no,no,no,yes,no,no,1,30,1,0,1,1,2019-08-15 02:22:58.246277,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 03:09:46.570342,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, new: Rectangle) -> None:
        self.rectangles.append(new)
    
    def get_same_area_rects(self, num: float) -> List[Rectangle]:
        same_area_rects = []
        for thing in self.rectangles:
            if get_area(thing) == num:
                same_area_rects.append(thing)
        return same_area_rects
    
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",2.0,,,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,1,0,0,1,1,0,1,0,0,1,0,0,0,1
358,2019-08-08 17:52:03,2019-08-11 16:09:36,0,,11,724,0,2019-08-11 22:16:41,R_tG7jHCUsp68YZq1,,,,,,,anonymous,ZH-S,,,5.059,,,,,,,,,,,,,,,,,,,,,,1,,,68,no,stop,yes,no,no,no,no,no,no,1,1760,1,0,1,1,2019-08-13 01:14:29.469430,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 01:17:54.544631,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    
    def add_rectangles(self, Rectangle) -> None:
        self.rectangles.append(Rectangle)
    
    def get_same_area_rects(self, area) -> list:
        self.l = []
        for rec in self.rectangles:
            if rec.get_area = area:
                l.append(rec)
        return self.l
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",6.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,1,1,1,0,0,0,0,1,0,0,0,1
359,2019-08-12 07:14:03,2019-08-11 23:09:48,0,,11,0,0,2019-08-12 00:31:11,R_3r2hKj9tKNpVhN6,,,,,,,anonymous,ZH-S,,,,,,,,,,,,,"The first 3 methods are fairly trivial to code. But, if the 2nd one requires explanation, I would describe the solution as recognizing that we only need to make sure that the length of the value_list is less than it's size before appending the object. The last method compare can simply be split into if, elif and else statements as only those 3 cases exist when comparing the lengths of the value_list of self and other.",,,,,,,,,,,,1,,,68,yes,research,no,yes,no,yes,no,yes,yes,1,0,1,0,1,1,2019-08-14 23:18:41.214887,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-11 22:23:36.619000,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangles(self, r = Rectangle) -> None:
        self.rectangles.append(r)
    def get_same_area_tects(self, i:int) -> int:
        list = []
        for r in self.rectangles:
            if r.get_area() == i:
                list.append(r)
        return lists
 
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 45] expected an indented block (<string>, line 45)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,,0,1,0,1,0,0,1,1,0,0,1,0,0,0,1
361,2019-08-12 09:49:23,2019-08-12 09:43:24,0,,11,1,1,2019-08-11 23:09:49,R_1mCoBK9axN7i6wF,,,,,,,anonymous,EN,,,,,,,,1440x900,,,,,,,,,,,,,,,,,1,,,68,no,stop,no,no,no,yes,yes,yes,no,1,960,1,0,1,1,2019-08-12 01:09:55.950192,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:17:37.624780,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    
    def add_rectangle(self, rec: Rectangle) -> list:
        return self.rectangles.append(rec)
    
    def get_same_area_rects(self, area: int) -> list:
        result = []
        for item in self.rectangles:
            if item.get_area() == area:
                result.append(item)
    return result
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,True,,=== Code errors/forbidden usage (fix: high priority) ===<br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 39] Undefined variable 'new_value'<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,because i thought it would work? idk its not a multiple choice question,0,0,0,1,0,1,1,0,0,1,0,0,0,0,1
362,2019-08-11 19:47:26,2019-08-12 00:36:12,0,,11,0,1,2019-08-09 19:21:32,R_1jNi0hAFE0pGk69,,,,,,,anonymous,EN,,,,,,,,1920x1080,,,,,,,,,,,,,,,,,2,,,68,yes,no,no,no,no,no,no,no,no,1,814,1,0,1,1,2019-08-11 23:16:04.666479,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 14:26:30.509109,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 43] Undefined variable 'rectangles'<br /><br />=== Style/convention errors (fix: before submission) ===<br />R0201 (no-self-use)  Number of occurrences: 1.<br />  &emsp;[Line 43] Method could be a function,1.0,,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1
364,2019-08-10 11:57:02,2019-08-11 13:49:40,0,,100,650,1,2019-08-09 05:16:32,R_1jJ2OJ3cywRoM1Z,,,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,"i know that i missing something , not sure of self.SpecialList",,1,,,68,yes,no,yes,no,no,yes,no,no,yes,1,2052,1,0,1,1,2019-08-14 15:16:08.611836,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 13:52:56.654845,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E1101 (no-member)  Number of occurrences: 1.<br />  &emsp;[Line 40] Instance of 'RectangleCollection' has no 'rectangels' member<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0621 (redefined-outer-name)  Number of occurrences: 1.<br />  &emsp;[Line 39] Redefining name 'Rectangle' from outer scope (line 3)<br /><br />W0622 (redefined-builtin)  Number of occurrences: 1.<br />  &emsp;[Line 43] Redefining built-in 'list',0.75,,0,0,1,0,1,0,0,0,0,1,0,0,0,0,1
367,2019-08-11 21:12:25,2019-08-10 21:10:15,0,,11,4472,0,2019-08-11 23:47:40,R_egoUkpeDHSCNaVj,,,,,,,anonymous,EN,,80.114,,,Chrome,,,,,,,,,,,,,,,,,,,,1,,,68,yes,stop,yes,no,no,yes,no,yes,no,1,645,1,0,1,1,2019-08-11 21:06:44.771667,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 14:31:24.219026,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",2.0,,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!,0.5,reviewing the notes and attempt the code in wing. ,62,0,0,1,1,1,0,1,0,1,1,0,0,0,1
370,2019-08-11 20:25:02,2019-08-12 08:25:05,0,,11,280,0,2019-08-09 17:47:14,R_2tA24jukxketsx4,,,,,,,anonymous,EN,,,,,Chrome,,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,yes,yes,no,no,yes,yes,no,1,91,0,0,1,1,2019-08-12 15:15:03.299195,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 08:02:06.931850,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,I/O operation on closed file,0.0,,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1
371,2019-08-12 08:09:01,2019-08-11 17:56:17,0,,11,1142,1,2019-08-09 17:11:29,R_3PLvUtNwKT1dKlc,,,,,,,anonymous,EN,,,,,,,,,,,,,,,because i thought it would work? idk its not a multiple choice question,,,,,,,,,,1,,,68,yes,no,yes,no,no,yes,yes,yes,no,1,8513,0,0,1,1,2019-08-12 04:03:58.243595,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-11 21:36:49.927412,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangle(self,rect):
        self.rectangles.append(rect)
    def get_same_area_rects(self,area):
        rects=[]
        for rect in self.rectangles:
            if area == rect.get_area():
                rects.append(rect)
        return rects
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,True,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E1101 (no-member)  Number of occurrences: 1.<br />  &emsp;[Line 38] Instance of 'RectangleCollection' has no 'rectangles' member<br /><br />E0602 (undefined-variable)  Number of occurrences: 3.<br />  &emsp;[Line 39] Undefined variable 'area'<br />&emsp;[Line 40] Undefined variable 'rects'<br />&emsp;[Line 41] Undefined variable 'rects'<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0326 (bad-whitespace)  Number of occurrences: 1.<br />  &emsp;[Line 39] Exactly one space required around comparison<br /><br />E0101 (return-in-init)  Number of occurrences: 1.<br />  &emsp;[Line 32] Explicit return in __init__<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,1,0,0,1,1,1,1,0,0,0,0,0,0,1
373,2019-08-10 12:33:29,2019-08-10 12:41:41,8,,11,5424,1,2019-08-17 19:32:20,R_Y616M4MuGieZpnP,,,,,,,anonymous,EN,,,,2,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,research,yes,yes,no,no,yes,yes,yes,1,1778,1,0,1,1,2019-08-12 21:45:38.889276,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:51:54.062254,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />C0326 (bad-whitespace)  Number of occurrences: 2.<br />  &emsp;[Line 39] Exactly one space required after comma<br />&emsp;[Line 41] Exactly one space required after comma<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,1,0,0,0,0,0,1,0,1,0,0,0,0,1
383,2019-08-12 05:03:19,2019-08-12 00:20:54,0,,11,1438,0,2019-08-09 10:41:27,R_3QbT4rqom2I4eWZ,,,,,,,anonymous,ZH-S,,,,,,75.0.3770.142,,1440x900,,,,reviewing the notes and attempt the code in wing. ,,,,,,,,,,,,,1,,,68,no,stop,yes,no,no,yes,no,yes,yes,1,107,1,0,1,1,2019-08-12 02:17:53.261634,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-08 19:11:01.759463,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""
        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []

    def add_rectangle(self, r: Rectangle) -> None:
        self.rectangles.append(r)

    def get_same_area_rects(self, area: int) -> list:
        lst = []
        for r in self.rectangles:
            if r.get_area() == area:
                lst.append(r)
        return lst
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",2.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,1.0,,0,0,0,0,0,1,0,0,0,1,1,0,0,0,1
385,2019-08-12 08:39:44,2019-08-11 21:39:35,0,,11,627,0,2019-08-12 01:18:26,R_R3LWTYCzrHVn1vz,,,,,,,anonymous,EN,,,,1,,,,,,,,,,,,,,,,,,,,,1,,,68,yes,research,yes,no,no,no,no,no,yes,1,69,1,0,1,1,2019-08-14 17:57:19.437197,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 14:04:22.694899,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add(self, r: Rectangle) -> None:
        """"""Add a to my list of rectangles. """"""
        self.rectangles.append(r)
        
    def get_same_area_rects(self, area: int) -> List[Rectangle]:
        new_list = []
        for rectangle in self.rectangles:
            if rectangle.get_area() == area:
                new_list.append(rectangle)
        return new_list        
                
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,True,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1
388,2019-08-08 23:42:25,2019-08-11 17:31:11,0,,11,1,0,2019-08-11 21:31:13,R_77ce7gzXLwtLDhf,,,,,,,anonymous,EN,36.012,,,,Chrome,75.0.3770.142,,,,,,,,,,,,,,,,,,,1,,,68,no,research,no,yes,no,yes,yes,yes,no,1,26,1,1,1,1,2019-08-12 01:03:31.826959,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 02:24:27.000993,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""

def get_same_area_rects(self, number):
    temp_list = []
    for rectangle in self.rectangles:
        if number == rectangle.area():
            temp_list.append(rectangle)
    return temp_list
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 38] invalid syntax (<string>, line 38)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",1.0,,0,0,1,0,1,1,1,1,0,0,0,0,0,0,1
393,2019-08-11 15:26:19,2019-08-09 16:43:37,0,,11,295,0,2019-08-12 00:07:52,R_RwOIHLMqL8spQwp,,,,,,,anonymous,ZH-S,10.689,5.117,,,Chrome,,Macintosh,1440x900,,,,,,,,,,,,,,,,,1,,,68,yes,research,no,yes,no,no,yes,no,no,1,1401,1,0,1,1,2019-08-12 00:25:08.609911,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 14:22:58.671592,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []

    def add_rectangle(self, x:Rectangle):
        self.rectangles.append(x)

    def get_same_area_rects(self, size:int):
        k=[]
        for item in  self.rectangles:
            if item.get_area() == size:
                k.append(item)
        return k     
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,1,1,1,1,1,1,0,1,0,0,0,0,1
395,2019-08-09 22:51:10,2019-08-12 09:41:37,0,,100,6697,0,2019-08-11 23:37:15,R_wLyJyM9Vz34Es0h,,,,,,,anonymous,EN,121.252,,,,,,,,,,,,,,,,,,,,,,,,1,,,68,no,stop,yes,yes,no,no,no,no,yes,1,0,1,0,1,1,2019-08-14 19:32:22.819370,,Lecture,1,False,False,True,False,False,monokai,False,,,Lecture,,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
        self.rectangles = []
        
    def add_rectangle(self, rec: Rectangle) -> None:
        self.rectangles.append(rec)
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",3.0,False,67.0,"=== Code errors/forbidden usage (fix: high priority) ===<br />E0001 (syntax-error)  Number of occurrences: 1.<br />  &emsp;[Line 45] invalid syntax (<string>, line 45)<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!",0.0,,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1
396,2019-08-12 08:08:37,2019-08-12 00:56:40,0,,11,440,0,2019-08-11 03:58:50,R_Cdz3h2TEHpEvNuN,,,,,,,anonymous,EN,,,,,Chrome,,,1280x800,,,,,,,,,,,,,,,,,1,,,68,yes,research,yes,no,no,yes,no,no,no,1,0,0,0,1,1,2019-08-10 18:36:57.165346,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:02:55.849769,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 38] Undefined variable 'RectanglesCollection'<br /><br />E1101 (no-member)  Number of occurrences: 2.<br />  &emsp;[Line 59] Instance of 'RectangleCollection' has no 'width' member<br />&emsp;[Line 59] Instance of 'RectangleCollection' has no 'height' member<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0201 (attribute-defined-outside-init)  Number of occurrences: 1.<br />  &emsp;[Line 58] Attribute 'rectangle' defined outside __init__<br /><br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,0,0,1,1,1,0,1,0,0,0,0,0,0,1
398,2019-08-10 20:52:32,2019-08-12 09:58:06,0,,11,20,0,2019-08-10 20:42:49,R_2xMgzo3U7npoNfJ,,,,,,,anonymous,EN,,,,,,,,,,,Why am I receiving an 'undefined variable 'L' ' error?,,,,,,,,,,,,,,1,,,68,yes,no,yes,no,no,yes,no,no,yes,1,0,1,1,1,1,2019-08-12 09:47:18.749593,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:45:33.682428,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h
     

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
        
    def add_rectangle(self, other: Rectangle) -> None:
        """"""
        >>> r = Rectangle(1, 2)
        >>> rc = RectangleCollection()
        >>> rc.add_rectangle(r)
        [r]
        """"""
        self.rectangles.append(other)
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,,=== Code errors/forbidden usage (fix: high priority) ===<br />E1101 (no-member)  Number of occurrences: 1.<br />  &emsp;[Line 46] Instance of 'RectangleCollection' has no 'get_area' member<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!,0.0,,0,0,0,0,1,0,1,1,0,1,1,0,0,0,1
401,2019-08-11 17:33:57,2019-08-12 09:41:22,0,,11,64,1,2019-08-11 22:58:02,R_2c1mSqfMhBkYkd7,,,,,,,anonymous,EN,,,,1,Chrome,,,1280x800,,,,,,,,,,,,,,,,,1,,,68,yes,stop,yes,no,no,no,yes,yes,yes,1,1505,1,0,1,1,2019-08-11 15:55:34.806299,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-08 00:37:58.221268,,,True,67.0,,0.75,,0,0,1,0,1,0,1,1,0,0,1,0,0,0,1
403,2019-08-11 20:07:19,2019-08-11 09:58:13,0,,11,1,0,2019-08-10 18:44:48,R_2CkQ6C16azc5m7L,,,,,,,anonymous,EN,,,,,,,Macintosh,,,,,,,,,,,,,,,,,,1,,,68,yes,no,yes,yes,no,no,no,no,no,1,1171,1,0,1,1,2019-08-11 15:18:09.859289,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 04:21:52.497474,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    def add_rectangle(self, Rectangle) -> None:
        self.rectangels.append(Rectangle)
    
    def get_same_area_rects(self, area: int) -> List:
        list = []
        for i in self.rectangles:
            if i.get_area() == area:
                list.append(i)
        return list
            
            
            
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,1.0,,0,0,0,0,0,0,1,1,0,1,1,0,0,0,1
406,2019-08-11 20:41:29,2019-08-11 15:53:14,0,,11,90,0,2019-08-09 01:12:13,R_plBr424hpMrMSDD,,,,,,,anonymous,EN,,275.971,69.171,,,75.0.3770.142,,1280x800,,,,,,"initialize the values, then treat the rest like functions where the initialized things are constants",,,,,,,,,,,1,,,68,no,research,no,yes,no,yes,no,no,no,1,295,1,1,1,1,2019-08-15 03:33:16.042309,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-08 21:59:28.149377,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangle_collection = RectanglesCollection
        
    def add_rectangle(self, other: 'Rectangle') -> None:
        """"""Appends other to the rectangles list.
        
        >>> rc = Rectangle(10, 15)
        >>> rc.add_rectangle(20, 25)
        >>> rc
        [[10, 15], [20, 25]]
        """"""
        self.rectangle.append(other)
        
    def get_same_area_rects(self, a: int) -> float:
        """"""Returns a list of rectangles that have a area.
        
        >>> rc = [[10, 15], [20, 25]]
        >>> rc.get_same_area_rects(150)
        [10, 15]
        """"""
        same_area_rects = []
        for self.rectangle in self.rectangle_collection:
            if self.width * self.height == a:
                same_area_rects.append(self.rectangle)
                
        return same_area_rects
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!,0.0,,20,0,1,0,0,1,0,0,0,1,1,0,0,0,1
409,2019-08-11 17:14:25,2019-08-12 08:09:10,0,,11,7521,0,2019-08-09 03:48:57,R_PG6zuxMaxg8PFU5,,,,,,,anonymous,EN,,,,,,76.0.3809.100,,,,,,,,,,,,,,,,,,,1,,,68,yes,no,yes,yes,no,yes,no,no,yes,1,627,0,1,1,1,2019-08-11 19:46:01.742184,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-12 15:09:20.455281,,0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />None!<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,,0,1,0,0,0,1,0,1,0,0,1,0,0,0,1
410,2019-08-09 15:09:29,2019-08-11 11:04:44,0,,100,8796,0,2019-08-11 20:24:09,R_1jB9Z3LulRP2fgc,,,,,,,anonymous,ZH-S,19.502,1631.022,,,,75.0.3770.100,,,,,,,,,,,,,,,,,,,1,,,68,no,stop,no,no,no,no,yes,yes,yes,1,28,1,0,1,1,2019-08-12 15:32:32.341072,,Lecture,1,False,False,True,False,False,eclipse,False,,,,2019-08-12 03:49:36.312176,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",8.0,True,67.0,,0.0,,0,0,0,0,1,1,0,1,0,0,0,0,0,0,1
417,2019-08-09 11:48:45,2019-08-09 12:05:06,0,,11,240,1,2019-08-12 12:46:02,R_DS4uYWMF5u2kjrb,,,,,,,anonymous,EN,,,,,,,,1440x900,,,,,,,,,,,,,,,,,1,,,68,yes,stop,yes,yes,no,no,no,no,yes,1,0,1,0,1,1,2019-08-15 01:21:01.694101,,Lecture,1,False,False,True,False,False,shaped ,False,,,Lecture,2019-08-09 18:09:16.817983,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        
        self.rectangles = []
    
    def add_rectangle(self) -> None:
        
        (self.rectangles).append(self)
    
    def get_same_area_rects(area: int) -> List:
        
        if Rectangle.get_area == area:
            RectangleCollection.add_rectangle
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",8.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E0602 (undefined-variable)  Number of occurrences: 1.<br />  &emsp;[Line 50] Undefined variable 'rectange'<br /><br />=== Style/convention errors (fix: before submission) ===<br />None!,0.25,,0,0,1,0,1,1,0,0,0,0,0,0,0,0,1
426,2019-08-17 13:10:09,2019-08-11 20:07:01,0,,11,681,1,2019-08-11 17:49:47,R_290IPJp1ipSEvGU,,,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,,,4,,,68,no,no,no,yes,no,no,yes,yes,yes,1,2128,1,0,1,1,2019-08-12 13:40:45.665662,,Lecture,1,False,False,True,False,False,eclipse,False,,,,2019-08-12 10:03:18.878411,"4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
from typing import List 

class Rectangle:
    """""" A rectangle with a width and height. """"""

    def __init__(self, w: int, h: int) -> None:
        """"""Create a new rectangle of width w and height h.

        >>> r = Rectangle(1, 2)
        >>> r.width
        1
        >>> r.height
        2
        """"""

        self.width = w
        self.height = h

    def get_area(self) -> int:
        """"""Return the area of this rectangle.

        >>> r = Rectangle(10, 20)
        >>> r.get_area()
        200
        """"""

        return self.width * self.height


class RectangleCollection:

    def __init__(self) -> None:
        """"""
        >>> rc = RectangleCollection()
        >>> rc.rectangles
        []
        """"""
        self.rectangles = []
    
    def add_rectangle(rectangle: 'Rectangle') -> None:
        self.rectangles.append(rectangle)
    
    def get_same_area_rects(area: int) -> List:
        rect_list = []
        for rectangle in self.rectangles:
            if rectangle.get_area() == area:
                self.rect_list.append(rectangle)
        return rect_list
4d89d294cd4ca9f2ca57dc24a53ffb3ef5303122
",0.0,False,67.0,=== Code errors/forbidden usage (fix: high priority) ===<br />E1136 (unsubscriptable-object)  Number of occurrences: 1.<br />  &emsp;[Line 44] Value 'list' is unsubscriptable<br /><br />=== Style/convention errors (fix: before submission) ===<br />W0611 (unused-import)  Number of occurrences: 1.<br />  &emsp;[Line 1] Unused List imported from typing,0.0,I thought we could use len(),0,0,0,1,0,1,1,1,0,0,0,0,0,0,1
431,2019-08-11 14:02:17,2019-08-12 09:33:48,0,,100,69,0,2019-08-11 01:11:03,R_2CHtZbMfmn3yIBb,,,,,,,anonymous,EN,,,,,Chrome,75.0.3770.100,Windows NT 10.0,,,,,,,,,,,,,,,,,,1,,,68,no,research,yes,yes,no,yes,no,no,no,1,348,1,0,1,1,2019-08-14 18:46:40.113701,,Lecture,1,False,False,True,False,False,eclipse,False,,,Lecture,2019-08-11 01:05:50.241096,,4.0,False,67.0,,0.0,,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1
